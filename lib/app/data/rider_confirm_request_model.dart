///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetailsVehiclePic {
/*
{
  "key": "vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
  "_id": "661d2a95b394636b53de0ce7"
} 
*/

  String? key;
  String? url;
  String? Id;

  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetailsVehiclePic({
    this.key,
    this.url,
    this.Id,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetailsVehiclePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetails {
/*
{
  "_id": "661d2a95b394636b53de0ce6",
  "driverId": "661d27690ae69f9b5509f84d",
  "vehiclePic": {
    "key": "vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
    "_id": "661d2a95b394636b53de0ce7"
  },
  "model": "ModelIU",
  "type": "Sedan",
  "color": "Silver",
  "year": 1999,
  "licencePlate": "IU2024",
  "createdAt": "2024-04-15T13:24:37.094Z",
  "updatedAt": "2024-04-15T13:24:37.094Z"
} 
*/

  String? Id;
  String? driverId;
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetailsVehiclePic? vehiclePic;
  String? model;
  String? type;
  String? color;
  int? year;
  String? licencePlate;
  String? createdAt;
  String? updatedAt;

  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetails({
    this.Id,
    this.driverId,
    this.vehiclePic,
    this.model,
    this.type,
    this.color,
    this.year,
    this.licencePlate,
    this.createdAt,
    this.updatedAt,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    vehiclePic = (json['vehiclePic'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetailsVehiclePic.fromJson(json['vehiclePic']) : null;
    model = json['model']?.toString();
    type = json['type']?.toString();
    color = json['color']?.toString();
    year = json['year']?.toInt();
    licencePlate = json['licencePlate']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (vehiclePic != null) {
      data['vehiclePic'] = vehiclePic!.toJson();
    }
    data['model'] = model;
    data['type'] = type;
    data['color'] = color;
    data['year'] = year;
    data['licencePlate'] = licencePlate;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsProfilePic {
/*
{
  "key": "usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg"
} 
*/

  String? key;
  String? url;

  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsProfilePic({
    this.key,
    this.url,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsIdPic {
/*
{
  "key": "idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg"
} 
*/

  String? key;
  String? url;

  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsIdPic({
    this.key,
    this.url,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsNotificationPreferences.fromJson(Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsDriverDetails {
/*
{
  "_id": "661d27690ae69f9b5509f84d",
  "pinkMode": false,
  "fullName": "Zen",
  "phone": "+11234512345",
  "email": "user@test.com",
  "city": "Mumbai",
  "dob": "2006-04-20",
  "gender": "Male",
  "isDriver": true,
  "referralCode": "W2150A0637",
  "profileStatus": true,
  "vehicleStatus": true,
  "status": "active",
  "wallet": 0,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
  "firebaseSignInProvider": "phone",
  "rating": 0,
  "createdAt": "2024-04-15T13:11:05.211Z",
  "updatedAt": "2024-04-15T13:24:37.255Z",
  "idPic": {
    "key": "idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg"
  },
  "profilePic": {
    "key": "usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg"
  },
  "totalRides": 0,
  "vehicleDetails": [
    {
      "_id": "661d2a95b394636b53de0ce6",
      "driverId": "661d27690ae69f9b5509f84d",
      "vehiclePic": {
        "key": "vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
        "_id": "661d2a95b394636b53de0ce7"
      },
      "model": "ModelIU",
      "type": "Sedan",
      "color": "Silver",
      "year": 1999,
      "licencePlate": "IU2024",
      "createdAt": "2024-04-15T13:24:37.094Z",
      "updatedAt": "2024-04-15T13:24:37.094Z"
    }
  ]
} 
*/

  String? Id;
  bool? pinkMode;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsNotificationPreferences? notificationPreferences;
  String? firebaseUid;
  String? firebaseSignInProvider;
  int? rating;
  String? createdAt;
  String? updatedAt;
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsIdPic? idPic;
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsProfilePic? profilePic;
  int? totalRides;
  List<RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetails?>? vehicleDetails;

  RiderConfirmRequestModelDataDriverRideDetailsDriverDetails({
    this.Id,
    this.pinkMode,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.notificationPreferences,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.rating,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.totalRides,
    this.vehicleDetails,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDriverDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    pinkMode = json['pinkMode'];
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    notificationPreferences = (json['notificationPreferences'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsNotificationPreferences.fromJson(json['notificationPreferences']) : null;
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    rating = json['rating']?.toInt();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsIdPic.fromJson(json['idPic']) : null;
    profilePic = (json['profilePic'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsProfilePic.fromJson(json['profilePic']) : null;
    totalRides = json['totalRides']?.toInt();
  if (json['vehicleDetails'] != null) {
  final v = json['vehicleDetails'];
  final arr0 = <RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetails>[];
  v.forEach((v) {
  arr0.add(RiderConfirmRequestModelDataDriverRideDetailsDriverDetailsVehicleDetails.fromJson(v));
  });
    vehicleDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['pinkMode'] = pinkMode;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['rating'] = rating;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['totalRides'] = totalRides;
    if (vehicleDetails != null) {
      final v = vehicleDetails;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['vehicleDetails'] = arr0;
    }
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsRidersProfilePic {
/*
{
  "key": "usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg"
} 
*/

  String? key;
  String? url;

  RiderConfirmRequestModelDataDriverRideDetailsRidersProfilePic({
    this.key,
    this.url,
  });
  RiderConfirmRequestModelDataDriverRideDetailsRidersProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsRidersIdPic {
/*
{
  "key": "idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg"
} 
*/

  String? key;
  String? url;

  RiderConfirmRequestModelDataDriverRideDetailsRidersIdPic({
    this.key,
    this.url,
  });
  RiderConfirmRequestModelDataDriverRideDetailsRidersIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsRidersNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  RiderConfirmRequestModelDataDriverRideDetailsRidersNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  RiderConfirmRequestModelDataDriverRideDetailsRidersNotificationPreferences.fromJson(Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsRiders {
/*
{
  "_id": "661d10c3cea4346b0ee267d3",
  "pinkMode": false,
  "fullName": "Ria",
  "phone": "+11212121212",
  "email": "ria@test.com",
  "city": "Rajkot",
  "dob": "2000-04-20",
  "gender": "Female",
  "isDriver": false,
  "referralCode": "S0175P2893",
  "profileStatus": true,
  "vehicleStatus": false,
  "status": "active",
  "wallet": 0,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "firebaseUid": "YfTcEdNqhHPbYWY5bZzQxy5EwHG2",
  "firebaseSignInProvider": "phone",
  "rating": 0,
  "createdAt": "2024-04-15T11:34:27.422Z",
  "updatedAt": "2024-04-17T13:22:02.189Z",
  "idPic": {
    "key": "idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg"
  },
  "profilePic": {
    "key": "usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg"
  },
  "totalRides": 1
} 
*/

  String? Id;
  bool? pinkMode;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  RiderConfirmRequestModelDataDriverRideDetailsRidersNotificationPreferences? notificationPreferences;
  String? firebaseUid;
  String? firebaseSignInProvider;
  int? rating;
  String? createdAt;
  String? updatedAt;
  RiderConfirmRequestModelDataDriverRideDetailsRidersIdPic? idPic;
  RiderConfirmRequestModelDataDriverRideDetailsRidersProfilePic? profilePic;
  int? totalRides;

  RiderConfirmRequestModelDataDriverRideDetailsRiders({
    this.Id,
    this.pinkMode,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.notificationPreferences,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.rating,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.totalRides,
  });
  RiderConfirmRequestModelDataDriverRideDetailsRiders.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    pinkMode = json['pinkMode'];
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    notificationPreferences = (json['notificationPreferences'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsRidersNotificationPreferences.fromJson(json['notificationPreferences']) : null;
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    rating = json['rating']?.toInt();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsRidersIdPic.fromJson(json['idPic']) : null;
    profilePic = (json['profilePic'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsRidersProfilePic.fromJson(json['profilePic']) : null;
    totalRides = json['totalRides']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['pinkMode'] = pinkMode;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['rating'] = rating;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['totalRides'] = totalRides;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsPreferencesOther {
/*
{
  "AppreciatesConversation": false,
  "EnjoysMusic": false,
  "SmokeFree": true,
  "PetFriendly": false,
  "WinterTires": false,
  "CoolingOrHeating": false,
  "BabySeat": false,
  "HeatedSeats": false
} 
*/

  bool? AppreciatesConversation;
  bool? EnjoysMusic;
  bool? SmokeFree;
  bool? PetFriendly;
  bool? WinterTires;
  bool? CoolingOrHeating;
  bool? BabySeat;
  bool? HeatedSeats;

  RiderConfirmRequestModelDataDriverRideDetailsPreferencesOther({
    this.AppreciatesConversation,
    this.EnjoysMusic,
    this.SmokeFree,
    this.PetFriendly,
    this.WinterTires,
    this.CoolingOrHeating,
    this.BabySeat,
    this.HeatedSeats,
  });
  RiderConfirmRequestModelDataDriverRideDetailsPreferencesOther.fromJson(Map<String, dynamic> json) {
    AppreciatesConversation = json['AppreciatesConversation'];
    EnjoysMusic = json['EnjoysMusic'];
    SmokeFree = json['SmokeFree'];
    PetFriendly = json['PetFriendly'];
    WinterTires = json['WinterTires'];
    CoolingOrHeating = json['CoolingOrHeating'];
    BabySeat = json['BabySeat'];
    HeatedSeats = json['HeatedSeats'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AppreciatesConversation'] = AppreciatesConversation;
    data['EnjoysMusic'] = EnjoysMusic;
    data['SmokeFree'] = SmokeFree;
    data['PetFriendly'] = PetFriendly;
    data['WinterTires'] = WinterTires;
    data['CoolingOrHeating'] = CoolingOrHeating;
    data['BabySeat'] = BabySeat;
    data['HeatedSeats'] = HeatedSeats;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsPreferences {
/*
{
  "luggageType": "S",
  "other": {
    "AppreciatesConversation": false,
    "EnjoysMusic": false,
    "SmokeFree": true,
    "PetFriendly": false,
    "WinterTires": false,
    "CoolingOrHeating": false,
    "BabySeat": false,
    "HeatedSeats": false
  }
} 
*/

  String? luggageType;
  RiderConfirmRequestModelDataDriverRideDetailsPreferencesOther? other;

  RiderConfirmRequestModelDataDriverRideDetailsPreferences({
    this.luggageType,
    this.other,
  });
  RiderConfirmRequestModelDataDriverRideDetailsPreferences.fromJson(Map<String, dynamic> json) {
    luggageType = json['luggageType']?.toString();
    other = (json['other'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsPreferencesOther.fromJson(json['other']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['luggageType'] = luggageType;
    if (other != null) {
      data['other'] = other!.toJson();
    }
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsReturnTrip {
/*
{
  "isReturnTrip": false,
  "returnDate": null,
  "returnTime": ""
} 
*/

  bool? isReturnTrip;
  String? returnDate;
  String? returnTime;

  RiderConfirmRequestModelDataDriverRideDetailsReturnTrip({
    this.isReturnTrip,
    this.returnDate,
    this.returnTime,
  });
  RiderConfirmRequestModelDataDriverRideDetailsReturnTrip.fromJson(Map<String, dynamic> json) {
    isReturnTrip = json['isReturnTrip'];
    returnDate = json['returnDate']?.toString();
    returnTime = json['returnTime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isReturnTrip'] = isReturnTrip;
    data['returnDate'] = returnDate;
    data['returnTime'] = returnTime;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsRecurringTrip {
/*
{
  "recurringTripDays": [
    1
  ],
  "recurringTripIds": [
    "121212"
  ]
} 
*/

  List<int?>? recurringTripDays;
  List<String?>? recurringTripIds;

  RiderConfirmRequestModelDataDriverRideDetailsRecurringTrip({
    this.recurringTripDays,
    this.recurringTripIds,
  });
  RiderConfirmRequestModelDataDriverRideDetailsRecurringTrip.fromJson(Map<String, dynamic> json) {
  if (json['recurringTripDays'] != null) {
  final v = json['recurringTripDays'];
  final arr0 = <int>[];
  v.forEach((v) {
  arr0.add(v.toInt());
  });
    recurringTripDays = arr0;
    }
  if (json['recurringTripIds'] != null) {
  final v = json['recurringTripIds'];
  final arr0 = <String>[];
  v.forEach((v) {
  arr0.add(v.toString());
  });
    recurringTripIds = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (recurringTripDays != null) {
      final v = recurringTripDays;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['recurringTripDays'] = arr0;
    }
    if (recurringTripIds != null) {
      final v = recurringTripIds;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['recurringTripIds'] = arr0;
    }
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsStops {
/*
{
  "name": "",
  "type": "Point",
  "coordinates": [
    0
  ],
  "originToStopFair": "",
  "stopToStopFair": "",
  "stopTodestinationFair": null,
  "_id": "661fcb16fc0cb549ebc35500"
} 
*/

  String? name;
  String? type;
  List<int?>? coordinates;
  String? originToStopFair;
  String? stopToStopFair;
  String? stopTodestinationFair;
  String? Id;

  RiderConfirmRequestModelDataDriverRideDetailsStops({
    this.name,
    this.type,
    this.coordinates,
    this.originToStopFair,
    this.stopToStopFair,
    this.stopTodestinationFair,
    this.Id,
  });
  RiderConfirmRequestModelDataDriverRideDetailsStops.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
  if (json['coordinates'] != null) {
  final v = json['coordinates'];
  final arr0 = <int>[];
  v.forEach((v) {
  arr0.add(v.toInt());
  });
    coordinates = arr0;
    }
    originToStopFair = json['originToStopFair']?.toString();
    stopToStopFair = json['stopToStopFair']?.toString();
    stopTodestinationFair = json['stopTodestinationFair']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['coordinates'] = arr0;
    }
    data['originToStopFair'] = originToStopFair;
    data['stopToStopFair'] = stopToStopFair;
    data['stopTodestinationFair'] = stopTodestinationFair;
    data['_id'] = Id;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsDestination {
/*
{
  "name": "3R7R+C5H, Mumbai",
  "type": "Point",
  "coordinates": [
    72.84047029999999
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  RiderConfirmRequestModelDataDriverRideDetailsDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  RiderConfirmRequestModelDataDriverRideDetailsDestination.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
  if (json['coordinates'] != null) {
  final v = json['coordinates'];
  final arr0 = <double>[];
  v.forEach((v) {
  arr0.add(v.toDouble());
  });
    coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetailsOrigin {
/*
{
  "name": "3XFX+Q4V, Navi Mumbai",
  "type": "Point",
  "coordinates": [
    72.99778409999999
  ],
  "originDestinationFair": "9.76"
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  RiderConfirmRequestModelDataDriverRideDetailsOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  RiderConfirmRequestModelDataDriverRideDetailsOrigin.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
  if (json['coordinates'] != null) {
  final v = json['coordinates'];
  final arr0 = <double>[];
  v.forEach((v) {
  arr0.add(v.toDouble());
  });
    coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v);
  });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class RiderConfirmRequestModelDataDriverRideDetails {
/*
{
  "_id": "661fcb16fc0cb549ebc354ff",
  "driverId": "661d27690ae69f9b5509f84d",
  "origin": {
    "name": "3XFX+Q4V, Navi Mumbai",
    "type": "Point",
    "coordinates": [
      72.99778409999999
    ],
    "originDestinationFair": "9.76"
  },
  "destination": {
    "name": "3R7R+C5H, Mumbai",
    "type": "Point",
    "coordinates": [
      72.84047029999999
    ]
  },
  "stops": [
    {
      "name": "",
      "type": "Point",
      "coordinates": [
        0
      ],
      "originToStopFair": "",
      "stopToStopFair": "",
      "stopTodestinationFair": null,
      "_id": "661fcb16fc0cb549ebc35500"
    }
  ],
  "tripType": "oneTime",
  "recurringTrip": {
    "recurringTripDays": [
      1
    ],
    "recurringTripIds": [
      "121212"
    ]
  },
  "date": "2024-04-17T00:00:00.000Z",
  "time": "6:43 PM",
  "returnTrip": {
    "isReturnTrip": false,
    "returnDate": null,
    "returnTime": ""
  },
  "arrivalDate": null,
  "arrivalTime": null,
  "seatAvailable": 1,
  "preferences": {
    "luggageType": "S",
    "other": {
      "AppreciatesConversation": false,
      "EnjoysMusic": false,
      "SmokeFree": true,
      "PetFriendly": false,
      "WinterTires": false,
      "CoolingOrHeating": false,
      "BabySeat": false,
      "HeatedSeats": false
    }
  },
  "isStarted": false,
  "isCompleted": false,
  "isCancelled": false,
  "riders": [
    {
      "_id": "661d10c3cea4346b0ee267d3",
      "pinkMode": false,
      "fullName": "Ria",
      "phone": "+11212121212",
      "email": "ria@test.com",
      "city": "Rajkot",
      "dob": "2000-04-20",
      "gender": "Female",
      "isDriver": false,
      "referralCode": "S0175P2893",
      "profileStatus": true,
      "vehicleStatus": false,
      "status": "active",
      "wallet": 0,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": true,
        "offers": true
      },
      "firebaseUid": "YfTcEdNqhHPbYWY5bZzQxy5EwHG2",
      "firebaseSignInProvider": "phone",
      "rating": 0,
      "createdAt": "2024-04-15T11:34:27.422Z",
      "updatedAt": "2024-04-17T13:22:02.189Z",
      "idPic": {
        "key": "idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg"
      },
      "profilePic": {
        "key": "usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg"
      },
      "totalRides": 1
    }
  ],
  "description": "Ride description",
  "createdAt": "2024-04-17T13:13:58.722Z",
  "updatedAt": "2024-04-17T13:30:01.276Z",
  "driverDetails": [
    {
      "_id": "661d27690ae69f9b5509f84d",
      "pinkMode": false,
      "fullName": "Zen",
      "phone": "+11234512345",
      "email": "user@test.com",
      "city": "Mumbai",
      "dob": "2006-04-20",
      "gender": "Male",
      "isDriver": true,
      "referralCode": "W2150A0637",
      "profileStatus": true,
      "vehicleStatus": true,
      "status": "active",
      "wallet": 0,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": true,
        "offers": true
      },
      "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
      "firebaseSignInProvider": "phone",
      "rating": 0,
      "createdAt": "2024-04-15T13:11:05.211Z",
      "updatedAt": "2024-04-15T13:24:37.255Z",
      "idPic": {
        "key": "idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg"
      },
      "profilePic": {
        "key": "usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg"
      },
      "totalRides": 0,
      "vehicleDetails": [
        {
          "_id": "661d2a95b394636b53de0ce6",
          "driverId": "661d27690ae69f9b5509f84d",
          "vehiclePic": {
            "key": "vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
            "_id": "661d2a95b394636b53de0ce7"
          },
          "model": "ModelIU",
          "type": "Sedan",
          "color": "Silver",
          "year": 1999,
          "licencePlate": "IU2024",
          "createdAt": "2024-04-15T13:24:37.094Z",
          "updatedAt": "2024-04-15T13:24:37.094Z"
        }
      ]
    }
  ]
} 
*/

  String? Id;
  String? driverId;
  RiderConfirmRequestModelDataDriverRideDetailsOrigin? origin;
  RiderConfirmRequestModelDataDriverRideDetailsDestination? destination;
  List<RiderConfirmRequestModelDataDriverRideDetailsStops?>? stops;
  String? tripType;
  RiderConfirmRequestModelDataDriverRideDetailsRecurringTrip? recurringTrip;
  String? date;
  String? time;
  RiderConfirmRequestModelDataDriverRideDetailsReturnTrip? returnTrip;
  String? arrivalDate;
  String? arrivalTime;
  int? seatAvailable;
  RiderConfirmRequestModelDataDriverRideDetailsPreferences? preferences;
  bool? isStarted;
  bool? isCompleted;
  bool? isCancelled;
  List<RiderConfirmRequestModelDataDriverRideDetailsRiders?>? riders;
  String? description;
  String? createdAt;
  String? updatedAt;
  List<RiderConfirmRequestModelDataDriverRideDetailsDriverDetails?>? driverDetails;

  RiderConfirmRequestModelDataDriverRideDetails({
    this.Id,
    this.driverId,
    this.origin,
    this.destination,
    this.stops,
    this.tripType,
    this.recurringTrip,
    this.date,
    this.time,
    this.returnTrip,
    this.arrivalDate,
    this.arrivalTime,
    this.seatAvailable,
    this.preferences,
    this.isStarted,
    this.isCompleted,
    this.isCancelled,
    this.riders,
    this.description,
    this.createdAt,
    this.updatedAt,
    this.driverDetails,
  });
  RiderConfirmRequestModelDataDriverRideDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    origin = (json['origin'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsOrigin.fromJson(json['origin']) : null;
    destination = (json['destination'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsDestination.fromJson(json['destination']) : null;
  if (json['stops'] != null) {
  final v = json['stops'];
  final arr0 = <RiderConfirmRequestModelDataDriverRideDetailsStops>[];
  v.forEach((v) {
  arr0.add(RiderConfirmRequestModelDataDriverRideDetailsStops.fromJson(v));
  });
    stops = arr0;
    }
    tripType = json['tripType']?.toString();
    recurringTrip = (json['recurringTrip'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsRecurringTrip.fromJson(json['recurringTrip']) : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    returnTrip = (json['returnTrip'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsReturnTrip.fromJson(json['returnTrip']) : null;
    arrivalDate = json['arrivalDate']?.toString();
    arrivalTime = json['arrivalTime']?.toString();
    seatAvailable = json['seatAvailable']?.toInt();
    preferences = (json['preferences'] != null) ? RiderConfirmRequestModelDataDriverRideDetailsPreferences.fromJson(json['preferences']) : null;
    isStarted = json['isStarted'];
    isCompleted = json['isCompleted'];
    isCancelled = json['isCancelled'];
  if (json['riders'] != null) {
  final v = json['riders'];
  final arr0 = <RiderConfirmRequestModelDataDriverRideDetailsRiders>[];
  v.forEach((v) {
  arr0.add(RiderConfirmRequestModelDataDriverRideDetailsRiders.fromJson(v));
  });
    riders = arr0;
    }
    description = json['description']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  if (json['driverDetails'] != null) {
  final v = json['driverDetails'];
  final arr0 = <RiderConfirmRequestModelDataDriverRideDetailsDriverDetails>[];
  v.forEach((v) {
  arr0.add(RiderConfirmRequestModelDataDriverRideDetailsDriverDetails.fromJson(v));
  });
    driverDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    if (stops != null) {
      final v = stops;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['stops'] = arr0;
    }
    data['tripType'] = tripType;
    if (recurringTrip != null) {
      data['recurringTrip'] = recurringTrip!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (returnTrip != null) {
      data['returnTrip'] = returnTrip!.toJson();
    }
    data['arrivalDate'] = arrivalDate;
    data['arrivalTime'] = arrivalTime;
    data['seatAvailable'] = seatAvailable;
    if (preferences != null) {
      data['preferences'] = preferences!.toJson();
    }
    data['isStarted'] = isStarted;
    data['isCompleted'] = isCompleted;
    data['isCancelled'] = isCancelled;
    if (riders != null) {
      final v = riders;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['riders'] = arr0;
    }
    data['description'] = description;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (driverDetails != null) {
      final v = driverDetails;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['driverDetails'] = arr0;
    }
    return data;
  }
}

class RiderConfirmRequestModelDataDropOffStatus {
/*
{
  "isDropOff": false
} 
*/

  bool? isDropOff;

  RiderConfirmRequestModelDataDropOffStatus({
    this.isDropOff,
  });
  RiderConfirmRequestModelDataDropOffStatus.fromJson(Map<String, dynamic> json) {
    isDropOff = json['isDropOff'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isDropOff'] = isDropOff;
    return data;
  }
}

class RiderConfirmRequestModelDataPickUpStatus {
/*
{
  "isPickUp": false
} 
*/

  bool? isPickUp;

  RiderConfirmRequestModelDataPickUpStatus({
    this.isPickUp,
  });
  RiderConfirmRequestModelDataPickUpStatus.fromJson(Map<String, dynamic> json) {
    isPickUp = json['isPickUp'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isPickUp'] = isPickUp;
    return data;
  }
}

class RiderConfirmRequestModelData {
/*
{
  "_id": "66209888fc0cb549ebc355d1",
  "driverRideId": "661fcb16fc0cb549ebc354ff",
  "riderRideId": "661fcce8fc0cb549ebc35514",
  "distance": "0.0",
  "cancelByDriver": false,
  "cancelByRider": false,
  "confirmByRider": false,
  "confirmByDriver": true,
  "pickUpStatus": {
    "isPickUp": false
  },
  "dropOffStatus": {
    "isDropOff": false
  },
  "isCompleted": false,
  "driverId": "661d27690ae69f9b5509f84d",
  "createdAt": "2024-04-18T03:50:32.066Z",
  "updatedAt": "2024-04-18T03:50:32.066Z",
  "driverRideDetails": [
    {
      "_id": "661fcb16fc0cb549ebc354ff",
      "driverId": "661d27690ae69f9b5509f84d",
      "origin": {
        "name": "3XFX+Q4V, Navi Mumbai",
        "type": "Point",
        "coordinates": [
          72.99778409999999
        ],
        "originDestinationFair": "9.76"
      },
      "destination": {
        "name": "3R7R+C5H, Mumbai",
        "type": "Point",
        "coordinates": [
          72.84047029999999
        ]
      },
      "stops": [
        {
          "name": "",
          "type": "Point",
          "coordinates": [
            0
          ],
          "originToStopFair": "",
          "stopToStopFair": "",
          "stopTodestinationFair": null,
          "_id": "661fcb16fc0cb549ebc35500"
        }
      ],
      "tripType": "oneTime",
      "recurringTrip": {
        "recurringTripDays": [
          1
        ],
        "recurringTripIds": [
          "121212"
        ]
      },
      "date": "2024-04-17T00:00:00.000Z",
      "time": "6:43 PM",
      "returnTrip": {
        "isReturnTrip": false,
        "returnDate": null,
        "returnTime": ""
      },
      "arrivalDate": null,
      "arrivalTime": null,
      "seatAvailable": 1,
      "preferences": {
        "luggageType": "S",
        "other": {
          "AppreciatesConversation": false,
          "EnjoysMusic": false,
          "SmokeFree": true,
          "PetFriendly": false,
          "WinterTires": false,
          "CoolingOrHeating": false,
          "BabySeat": false,
          "HeatedSeats": false
        }
      },
      "isStarted": false,
      "isCompleted": false,
      "isCancelled": false,
      "riders": [
        {
          "_id": "661d10c3cea4346b0ee267d3",
          "pinkMode": false,
          "fullName": "Ria",
          "phone": "+11212121212",
          "email": "ria@test.com",
          "city": "Rajkot",
          "dob": "2000-04-20",
          "gender": "Female",
          "isDriver": false,
          "referralCode": "S0175P2893",
          "profileStatus": true,
          "vehicleStatus": false,
          "status": "active",
          "wallet": 0,
          "notificationPreferences": {
            "trip": true,
            "alerts": true,
            "payments": true,
            "transactions": true,
            "offers": true
          },
          "firebaseUid": "YfTcEdNqhHPbYWY5bZzQxy5EwHG2",
          "firebaseSignInProvider": "phone",
          "rating": 0,
          "createdAt": "2024-04-15T11:34:27.422Z",
          "updatedAt": "2024-04-17T13:22:02.189Z",
          "idPic": {
            "key": "idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg"
          },
          "profilePic": {
            "key": "usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg"
          },
          "totalRides": 1
        }
      ],
      "description": "Ride description",
      "createdAt": "2024-04-17T13:13:58.722Z",
      "updatedAt": "2024-04-17T13:30:01.276Z",
      "driverDetails": [
        {
          "_id": "661d27690ae69f9b5509f84d",
          "pinkMode": false,
          "fullName": "Zen",
          "phone": "+11234512345",
          "email": "user@test.com",
          "city": "Mumbai",
          "dob": "2006-04-20",
          "gender": "Male",
          "isDriver": true,
          "referralCode": "W2150A0637",
          "profileStatus": true,
          "vehicleStatus": true,
          "status": "active",
          "wallet": 0,
          "notificationPreferences": {
            "trip": true,
            "alerts": true,
            "payments": true,
            "transactions": true,
            "offers": true
          },
          "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
          "firebaseSignInProvider": "phone",
          "rating": 0,
          "createdAt": "2024-04-15T13:11:05.211Z",
          "updatedAt": "2024-04-15T13:24:37.255Z",
          "idPic": {
            "key": "idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg"
          },
          "profilePic": {
            "key": "usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg"
          },
          "totalRides": 0,
          "vehicleDetails": [
            {
              "_id": "661d2a95b394636b53de0ce6",
              "driverId": "661d27690ae69f9b5509f84d",
              "vehiclePic": {
                "key": "vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
                "_id": "661d2a95b394636b53de0ce7"
              },
              "model": "ModelIU",
              "type": "Sedan",
              "color": "Silver",
              "year": 1999,
              "licencePlate": "IU2024",
              "createdAt": "2024-04-15T13:24:37.094Z",
              "updatedAt": "2024-04-15T13:24:37.094Z"
            }
          ]
        }
      ]
    }
  ]
} 
*/

  String? Id;
  String? driverRideId;
  String? riderRideId;
  String? distance;
  bool? cancelByDriver;
  bool? cancelByRider;
  bool? confirmByRider;
  bool? confirmByDriver;
  RiderConfirmRequestModelDataPickUpStatus? pickUpStatus;
  RiderConfirmRequestModelDataDropOffStatus? dropOffStatus;
  bool? isCompleted;
  String? driverId;
  String? createdAt;
  String? updatedAt;
  List<RiderConfirmRequestModelDataDriverRideDetails?>? driverRideDetails;

  RiderConfirmRequestModelData({
    this.Id,
    this.driverRideId,
    this.riderRideId,
    this.distance,
    this.cancelByDriver,
    this.cancelByRider,
    this.confirmByRider,
    this.confirmByDriver,
    this.pickUpStatus,
    this.dropOffStatus,
    this.isCompleted,
    this.driverId,
    this.createdAt,
    this.updatedAt,
    this.driverRideDetails,
  });
  RiderConfirmRequestModelData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverRideId = json['driverRideId']?.toString();
    riderRideId = json['riderRideId']?.toString();
    distance = json['distance']?.toString();
    cancelByDriver = json['cancelByDriver'];
    cancelByRider = json['cancelByRider'];
    confirmByRider = json['confirmByRider'];
    confirmByDriver = json['confirmByDriver'];
    pickUpStatus = (json['pickUpStatus'] != null) ? RiderConfirmRequestModelDataPickUpStatus.fromJson(json['pickUpStatus']) : null;
    dropOffStatus = (json['dropOffStatus'] != null) ? RiderConfirmRequestModelDataDropOffStatus.fromJson(json['dropOffStatus']) : null;
    isCompleted = json['isCompleted'];
    driverId = json['driverId']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  if (json['driverRideDetails'] != null) {
  final v = json['driverRideDetails'];
  final arr0 = <RiderConfirmRequestModelDataDriverRideDetails>[];
  v.forEach((v) {
  arr0.add(RiderConfirmRequestModelDataDriverRideDetails.fromJson(v));
  });
    driverRideDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverRideId'] = driverRideId;
    data['riderRideId'] = riderRideId;
    data['distance'] = distance;
    data['cancelByDriver'] = cancelByDriver;
    data['cancelByRider'] = cancelByRider;
    data['confirmByRider'] = confirmByRider;
    data['confirmByDriver'] = confirmByDriver;
    if (pickUpStatus != null) {
      data['pickUpStatus'] = pickUpStatus!.toJson();
    }
    if (dropOffStatus != null) {
      data['dropOffStatus'] = dropOffStatus!.toJson();
    }
    data['isCompleted'] = isCompleted;
    data['driverId'] = driverId;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (driverRideDetails != null) {
      final v = driverRideDetails;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['driverRideDetails'] = arr0;
    }
    return data;
  }
}

class RiderConfirmRequestModel {
/*
{
  "status": true,
  "message": "success",
  "data": [
    {
      "_id": "66209888fc0cb549ebc355d1",
      "driverRideId": "661fcb16fc0cb549ebc354ff",
      "riderRideId": "661fcce8fc0cb549ebc35514",
      "distance": "0.0",
      "cancelByDriver": false,
      "cancelByRider": false,
      "confirmByRider": false,
      "confirmByDriver": true,
      "pickUpStatus": {
        "isPickUp": false
      },
      "dropOffStatus": {
        "isDropOff": false
      },
      "isCompleted": false,
      "driverId": "661d27690ae69f9b5509f84d",
      "createdAt": "2024-04-18T03:50:32.066Z",
      "updatedAt": "2024-04-18T03:50:32.066Z",
      "driverRideDetails": [
        {
          "_id": "661fcb16fc0cb549ebc354ff",
          "driverId": "661d27690ae69f9b5509f84d",
          "origin": {
            "name": "3XFX+Q4V, Navi Mumbai",
            "type": "Point",
            "coordinates": [
              72.99778409999999
            ],
            "originDestinationFair": "9.76"
          },
          "destination": {
            "name": "3R7R+C5H, Mumbai",
            "type": "Point",
            "coordinates": [
              72.84047029999999
            ]
          },
          "stops": [
            {
              "name": "",
              "type": "Point",
              "coordinates": [
                0
              ],
              "originToStopFair": "",
              "stopToStopFair": "",
              "stopTodestinationFair": null,
              "_id": "661fcb16fc0cb549ebc35500"
            }
          ],
          "tripType": "oneTime",
          "recurringTrip": {
            "recurringTripDays": [
              1
            ],
            "recurringTripIds": [
              "121212"
            ]
          },
          "date": "2024-04-17T00:00:00.000Z",
          "time": "6:43 PM",
          "returnTrip": {
            "isReturnTrip": false,
            "returnDate": null,
            "returnTime": ""
          },
          "arrivalDate": null,
          "arrivalTime": null,
          "seatAvailable": 1,
          "preferences": {
            "luggageType": "S",
            "other": {
              "AppreciatesConversation": false,
              "EnjoysMusic": false,
              "SmokeFree": true,
              "PetFriendly": false,
              "WinterTires": false,
              "CoolingOrHeating": false,
              "BabySeat": false,
              "HeatedSeats": false
            }
          },
          "isStarted": false,
          "isCompleted": false,
          "isCancelled": false,
          "riders": [
            {
              "_id": "661d10c3cea4346b0ee267d3",
              "pinkMode": false,
              "fullName": "Ria",
              "phone": "+11212121212",
              "email": "ria@test.com",
              "city": "Rajkot",
              "dob": "2000-04-20",
              "gender": "Female",
              "isDriver": false,
              "referralCode": "S0175P2893",
              "profileStatus": true,
              "vehicleStatus": false,
              "status": "active",
              "wallet": 0,
              "notificationPreferences": {
                "trip": true,
                "alerts": true,
                "payments": true,
                "transactions": true,
                "offers": true
              },
              "firebaseUid": "YfTcEdNqhHPbYWY5bZzQxy5EwHG2",
              "firebaseSignInProvider": "phone",
              "rating": 0,
              "createdAt": "2024-04-15T11:34:27.422Z",
              "updatedAt": "2024-04-17T13:22:02.189Z",
              "idPic": {
                "key": "idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/bf9018c7-ad37-47f0-b648-075e54474b8f-1000000034.jpg"
              },
              "profilePic": {
                "key": "usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/f8536123-8f53-4c8f-8acd-a033c30af1d9-1000000036.jpg"
              },
              "totalRides": 1
            }
          ],
          "description": "Ride description",
          "createdAt": "2024-04-17T13:13:58.722Z",
          "updatedAt": "2024-04-17T13:30:01.276Z",
          "driverDetails": [
            {
              "_id": "661d27690ae69f9b5509f84d",
              "pinkMode": false,
              "fullName": "Zen",
              "phone": "+11234512345",
              "email": "user@test.com",
              "city": "Mumbai",
              "dob": "2006-04-20",
              "gender": "Male",
              "isDriver": true,
              "referralCode": "W2150A0637",
              "profileStatus": true,
              "vehicleStatus": true,
              "status": "active",
              "wallet": 0,
              "notificationPreferences": {
                "trip": true,
                "alerts": true,
                "payments": true,
                "transactions": true,
                "offers": true
              },
              "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
              "firebaseSignInProvider": "phone",
              "rating": 0,
              "createdAt": "2024-04-15T13:11:05.211Z",
              "updatedAt": "2024-04-15T13:24:37.255Z",
              "idPic": {
                "key": "idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/fdf1f112-b004-436f-b81f-e804cd9119ae-1000000034.jpg"
              },
              "profilePic": {
                "key": "usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/277d7f6a-5d3c-47dc-b1cb-d11d4cbe62ba-1000000036.jpg"
              },
              "totalRides": 0,
              "vehicleDetails": [
                {
                  "_id": "661d2a95b394636b53de0ce6",
                  "driverId": "661d27690ae69f9b5509f84d",
                  "vehiclePic": {
                    "key": "vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/a39e0df8-7b64-4ce7-81a4-a49583571bab-1000000038.jpg",
                    "_id": "661d2a95b394636b53de0ce7"
                  },
                  "model": "ModelIU",
                  "type": "Sedan",
                  "color": "Silver",
                  "year": 1999,
                  "licencePlate": "IU2024",
                  "createdAt": "2024-04-15T13:24:37.094Z",
                  "updatedAt": "2024-04-15T13:24:37.094Z"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
} 
*/

  bool? status;
  String? message;
  List<RiderConfirmRequestModelData?>? data;

  RiderConfirmRequestModel({
    this.status,
    this.message,
    this.data,
  });
  RiderConfirmRequestModel.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
  if (json['data'] != null) {
  final v = json['data'];
  final arr0 = <RiderConfirmRequestModelData>[];
  v.forEach((v) {
  arr0.add(RiderConfirmRequestModelData.fromJson(v));
  });
    this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['data'] = arr0;
    }
    return data;
  }
}
