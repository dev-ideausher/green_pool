///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class BookingDetailModelDataRiderBookingDetailsRiderDetailsProfilePic {
/*
{
  "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
}
*/

  String? key;
  String? url;

  BookingDetailModelDataRiderBookingDetailsRiderDetailsProfilePic({
    this.key,
    this.url,
  });
  BookingDetailModelDataRiderBookingDetailsRiderDetailsProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsRiderDetailsIdPic {
/*
{
  "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
}
*/

  String? key;
  String? url;

  BookingDetailModelDataRiderBookingDetailsRiderDetailsIdPic({
    this.key,
    this.url,
  });
  BookingDetailModelDataRiderBookingDetailsRiderDetailsIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsRiderDetailsNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
}
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  BookingDetailModelDataRiderBookingDetailsRiderDetailsNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  BookingDetailModelDataRiderBookingDetailsRiderDetailsNotificationPreferences.fromJson(Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsRiderDetails {
/*
{
  "_id": "661f6b6d2e30e94be6c6cf29",
  "pinkMode": false,
  "fullName": "Amar",
  "phone": "+19041490414",
  "email": "amar@yopmail.com",
  "city": "Bathinda",
  "dob": "2006-04-22",
  "gender": "Male",
  "isDriver": false,
  "referralCode": "S4613S0643",
  "profileStatus": true,
  "vehicleStatus": false,
  "status": "active",
  "wallet": 0,
  "rating": 0,
  "totalRides": 0,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-04-17T06:25:49.865Z",
  "updatedAt": "2024-04-17T08:27:02.124Z",
  "idPic": {
    "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
  },
  "profilePic": {
    "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
  }
}
*/

  String? Id;
  bool? pinkMode;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  int? rating;
  int? totalRides;
  BookingDetailModelDataRiderBookingDetailsRiderDetailsNotificationPreferences? notificationPreferences;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  BookingDetailModelDataRiderBookingDetailsRiderDetailsIdPic? idPic;
  BookingDetailModelDataRiderBookingDetailsRiderDetailsProfilePic? profilePic;

  BookingDetailModelDataRiderBookingDetailsRiderDetails({
    this.Id,
    this.pinkMode,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.rating,
    this.totalRides,
    this.notificationPreferences,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
  });
  BookingDetailModelDataRiderBookingDetailsRiderDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    pinkMode = json['pinkMode'];
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    rating = json['rating']?.toInt();
    totalRides = json['totalRides']?.toInt();
    notificationPreferences = (json['notificationPreferences'] != null) ? BookingDetailModelDataRiderBookingDetailsRiderDetailsNotificationPreferences.fromJson(json['notificationPreferences']) : null;
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null) ? BookingDetailModelDataRiderBookingDetailsRiderDetailsIdPic.fromJson(json['idPic']) : null;
    profilePic = (json['profilePic'] != null) ? BookingDetailModelDataRiderBookingDetailsRiderDetailsProfilePic.fromJson(json['profilePic']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['pinkMode'] = pinkMode;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsPreferencesOther {
/*
{
  "AppreciatesConversation": false,
  "EnjoysMusic": false,
  "SmokeFree": false,
  "PetFriendly": false,
  "WinterTires": false,
  "CoolingOrHeating": false,
  "BabySeat": false,
  "HeatedSeats": false
}
*/

  bool? AppreciatesConversation;
  bool? EnjoysMusic;
  bool? SmokeFree;
  bool? PetFriendly;
  bool? WinterTires;
  bool? CoolingOrHeating;
  bool? BabySeat;
  bool? HeatedSeats;

  BookingDetailModelDataRiderBookingDetailsPreferencesOther({
    this.AppreciatesConversation,
    this.EnjoysMusic,
    this.SmokeFree,
    this.PetFriendly,
    this.WinterTires,
    this.CoolingOrHeating,
    this.BabySeat,
    this.HeatedSeats,
  });
  BookingDetailModelDataRiderBookingDetailsPreferencesOther.fromJson(Map<String, dynamic> json) {
    AppreciatesConversation = json['AppreciatesConversation'];
    EnjoysMusic = json['EnjoysMusic'];
    SmokeFree = json['SmokeFree'];
    PetFriendly = json['PetFriendly'];
    WinterTires = json['WinterTires'];
    CoolingOrHeating = json['CoolingOrHeating'];
    BabySeat = json['BabySeat'];
    HeatedSeats = json['HeatedSeats'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AppreciatesConversation'] = AppreciatesConversation;
    data['EnjoysMusic'] = EnjoysMusic;
    data['SmokeFree'] = SmokeFree;
    data['PetFriendly'] = PetFriendly;
    data['WinterTires'] = WinterTires;
    data['CoolingOrHeating'] = CoolingOrHeating;
    data['BabySeat'] = BabySeat;
    data['HeatedSeats'] = HeatedSeats;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsPreferences {
/*
{
  "other": {
    "AppreciatesConversation": false,
    "EnjoysMusic": false,
    "SmokeFree": false,
    "PetFriendly": false,
    "WinterTires": false,
    "CoolingOrHeating": false,
    "BabySeat": false,
    "HeatedSeats": false
  },
  "luggageType": "null"
}
*/

  BookingDetailModelDataRiderBookingDetailsPreferencesOther? other;
  String? luggageType;

  BookingDetailModelDataRiderBookingDetailsPreferences({
    this.other,
    this.luggageType,
  });
  BookingDetailModelDataRiderBookingDetailsPreferences.fromJson(Map<String, dynamic> json) {
    other = (json['other'] != null) ? BookingDetailModelDataRiderBookingDetailsPreferencesOther.fromJson(json['other']) : null;
    luggageType = json['luggageType']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (other != null) {
      data['other'] = other!.toJson();
    }
    data['luggageType'] = luggageType;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsReturnTrip {
/*
{
  "returnTripId": "null",
  "isReturnTrip": false,
  "returnDate": "null",
  "returnTime": "null"
}
*/

  String? returnTripId;
  bool? isReturnTrip;
  String? returnDate;
  String? returnTime;

  BookingDetailModelDataRiderBookingDetailsReturnTrip({
    this.returnTripId,
    this.isReturnTrip,
    this.returnDate,
    this.returnTime,
  });
  BookingDetailModelDataRiderBookingDetailsReturnTrip.fromJson(Map<String, dynamic> json) {
    returnTripId = json['returnTripId']?.toString();
    isReturnTrip = json['isReturnTrip'];
    returnDate = json['returnDate']?.toString();
    returnTime = json['returnTime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['returnTripId'] = returnTripId;
    data['isReturnTrip'] = isReturnTrip;
    data['returnDate'] = returnDate;
    data['returnTime'] = returnTime;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsRecurringTrip {
/*
{
  "recurringTripIds": [
    ""
  ],
  "recurringTripDays": [
    ""
  ]
}
*/

  List<String?>? recurringTripIds;
  List<String?>? recurringTripDays;

  BookingDetailModelDataRiderBookingDetailsRecurringTrip({
    this.recurringTripIds,
    this.recurringTripDays,
  });
  BookingDetailModelDataRiderBookingDetailsRecurringTrip.fromJson(Map<String, dynamic> json) {
    if (json['recurringTripIds'] != null) {
      final v = json['recurringTripIds'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      recurringTripIds = arr0;
    }
    if (json['recurringTripDays'] != null) {
      final v = json['recurringTripDays'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      recurringTripDays = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (recurringTripIds != null) {
      final v = recurringTripIds;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripIds'] = arr0;
    }
    if (recurringTripDays != null) {
      final v = recurringTripDays;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripDays'] = arr0;
    }
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsDestination {
/*
{
  "name": "SH 16, Moga",
  "type": "Point",
  "coordinates": [
    75.17344709999999
  ]
}
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  BookingDetailModelDataRiderBookingDetailsDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  BookingDetailModelDataRiderBookingDetailsDestination.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetailsOrigin {
/*
{
  "name": "Shaheed Nand Singh Chowk, Bathinda",
  "type": "Point",
  "coordinates": [
    74.9454745
  ],
  "originDestinationFair": "null"
}
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  BookingDetailModelDataRiderBookingDetailsOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  BookingDetailModelDataRiderBookingDetailsOrigin.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class BookingDetailModelDataRiderBookingDetails {
/*
{
  "_id": "661f88007c6897bb8928d7fc",
  "riderId": "661f6b6d2e30e94be6c6cf29",
  "origin": {
    "name": "Shaheed Nand Singh Chowk, Bathinda",
    "type": "Point",
    "coordinates": [
      74.9454745
    ],
    "originDestinationFair": "null"
  },
  "destination": {
    "name": "SH 16, Moga",
    "type": "Point",
    "coordinates": [
      75.17344709999999
    ]
  },
  "tripType": "null",
  "recurringTrip": {
    "recurringTripIds": [
      ""
    ],
    "recurringTripDays": [
      ""
    ]
  },
  "date": "null",
  "time": "",
  "returnTrip": {
    "returnTripId": "null",
    "isReturnTrip": false,
    "returnDate": "null",
    "returnTime": "null"
  },
  "arrivalDate": "null",
  "arrivalTime": "null",
  "seatAvailable": 1,
  "preferences": {
    "other": {
      "AppreciatesConversation": false,
      "EnjoysMusic": false,
      "SmokeFree": false,
      "PetFriendly": false,
      "WinterTires": false,
      "CoolingOrHeating": false,
      "BabySeat": false,
      "HeatedSeats": false
    },
    "luggageType": "null"
  },
  "isStarted": false,
  "isCompleted": false,
  "isCancelled": false,
  "riders": [
    ""
  ],
  "drivers": [
    ""
  ],
  "description": "",
  "createdAt": "2024-04-17T08:27:44.825Z",
  "updatedAt": "2024-04-17T08:27:44.825Z",
  "riderDetails": {
    "_id": "661f6b6d2e30e94be6c6cf29",
    "pinkMode": false,
    "fullName": "Amar",
    "phone": "+19041490414",
    "email": "amar@yopmail.com",
    "city": "Bathinda",
    "dob": "2006-04-22",
    "gender": "Male",
    "isDriver": false,
    "referralCode": "S4613S0643",
    "profileStatus": true,
    "vehicleStatus": false,
    "status": "active",
    "wallet": 0,
    "rating": 0,
    "totalRides": 0,
    "notificationPreferences": {
      "trip": true,
      "alerts": true,
      "payments": true,
      "transactions": true,
      "offers": true
    },
    "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
    "firebaseSignInProvider": "phone",
    "createdAt": "2024-04-17T06:25:49.865Z",
    "updatedAt": "2024-04-17T08:27:02.124Z",
    "idPic": {
      "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
    },
    "profilePic": {
      "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
    }
  }
}
*/

  String? Id;
  String? riderId;
  BookingDetailModelDataRiderBookingDetailsOrigin? origin;
  BookingDetailModelDataRiderBookingDetailsDestination? destination;
  String? tripType;
  BookingDetailModelDataRiderBookingDetailsRecurringTrip? recurringTrip;
  String? date;
  String? time;
  BookingDetailModelDataRiderBookingDetailsReturnTrip? returnTrip;
  String? arrivalDate;
  String? arrivalTime;
  int? seatAvailable;
  BookingDetailModelDataRiderBookingDetailsPreferences? preferences;
  bool? isStarted;
  bool? isCompleted;
  bool? isCancelled;
  List<String?>? riders;
  List<String?>? drivers;
  String? description;
  String? createdAt;
  String? updatedAt;
  BookingDetailModelDataRiderBookingDetailsRiderDetails? riderDetails;

  BookingDetailModelDataRiderBookingDetails({
    this.Id,
    this.riderId,
    this.origin,
    this.destination,
    this.tripType,
    this.recurringTrip,
    this.date,
    this.time,
    this.returnTrip,
    this.arrivalDate,
    this.arrivalTime,
    this.seatAvailable,
    this.preferences,
    this.isStarted,
    this.isCompleted,
    this.isCancelled,
    this.riders,
    this.drivers,
    this.description,
    this.createdAt,
    this.updatedAt,
    this.riderDetails,
  });
  BookingDetailModelDataRiderBookingDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    riderId = json['riderId']?.toString();
    origin = (json['origin'] != null) ? BookingDetailModelDataRiderBookingDetailsOrigin.fromJson(json['origin']) : null;
    destination = (json['destination'] != null) ? BookingDetailModelDataRiderBookingDetailsDestination.fromJson(json['destination']) : null;
    tripType = json['tripType']?.toString();
    recurringTrip = (json['recurringTrip'] != null) ? BookingDetailModelDataRiderBookingDetailsRecurringTrip.fromJson(json['recurringTrip']) : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    returnTrip = (json['returnTrip'] != null) ? BookingDetailModelDataRiderBookingDetailsReturnTrip.fromJson(json['returnTrip']) : null;
    arrivalDate = json['arrivalDate']?.toString();
    arrivalTime = json['arrivalTime']?.toString();
    seatAvailable = json['seatAvailable']?.toInt();
    preferences = (json['preferences'] != null) ? BookingDetailModelDataRiderBookingDetailsPreferences.fromJson(json['preferences']) : null;
    isStarted = json['isStarted'];
    isCompleted = json['isCompleted'];
    isCancelled = json['isCancelled'];
    if (json['riders'] != null) {
      final v = json['riders'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      riders = arr0;
    }
    if (json['drivers'] != null) {
      final v = json['drivers'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      drivers = arr0;
    }
    description = json['description']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    riderDetails = (json['riderDetails'] != null) ? BookingDetailModelDataRiderBookingDetailsRiderDetails.fromJson(json['riderDetails']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['riderId'] = riderId;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    data['tripType'] = tripType;
    if (recurringTrip != null) {
      data['recurringTrip'] = recurringTrip!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (returnTrip != null) {
      data['returnTrip'] = returnTrip!.toJson();
    }
    data['arrivalDate'] = arrivalDate;
    data['arrivalTime'] = arrivalTime;
    data['seatAvailable'] = seatAvailable;
    if (preferences != null) {
      data['preferences'] = preferences!.toJson();
    }
    data['isStarted'] = isStarted;
    data['isCompleted'] = isCompleted;
    data['isCancelled'] = isCancelled;
    if (riders != null) {
      final v = riders;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['riders'] = arr0;
    }
    if (drivers != null) {
      final v = drivers;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['drivers'] = arr0;
    }
    data['description'] = description;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (riderDetails != null) {
      data['riderDetails'] = riderDetails!.toJson();
    }
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetailsVehiclePic {
/*
{
  "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
  "_id": "6603d738ba3fdc24d7cbce50"
}
*/

  String? key;
  String? url;
  String? Id;

  BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetailsVehiclePic({
    this.key,
    this.url,
    this.Id,
  });
  BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetailsVehiclePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetails {
/*
{
  "_id": "65c23bef32f497dc57fdf002",
  "driverId": "65c228fd32f497dc57fdeff8",
  "vehiclePic": {
    "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
    "_id": "6603d738ba3fdc24d7cbce50"
  },
  "model": "creta",
  "type": "Convertible",
  "color": "Black",
  "year": 2024,
  "licencePlate": "LA2024",
  "createdAt": "2024-02-06T14:02:23.061Z",
  "updatedAt": "2024-04-15T04:53:34.316Z"
}
*/

  String? Id;
  String? driverId;
  BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetailsVehiclePic? vehiclePic;
  String? model;
  String? type;
  String? color;
  int? year;
  String? licencePlate;
  String? createdAt;
  String? updatedAt;

  BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetails({
    this.Id,
    this.driverId,
    this.vehiclePic,
    this.model,
    this.type,
    this.color,
    this.year,
    this.licencePlate,
    this.createdAt,
    this.updatedAt,
  });
  BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    vehiclePic = (json['vehiclePic'] != null) ? BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetailsVehiclePic.fromJson(json['vehiclePic']) : null;
    model = json['model']?.toString();
    type = json['type']?.toString();
    color = json['color']?.toString();
    year = json['year']?.toInt();
    licencePlate = json['licencePlate']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (vehiclePic != null) {
      data['vehiclePic'] = vehiclePic!.toJson();
    }
    data['model'] = model;
    data['type'] = type;
    data['color'] = color;
    data['year'] = year;
    data['licencePlate'] = licencePlate;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDriverDetailsNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
}
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  BookingDetailModelDataDriverBookingDetailsDriverDetailsNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  BookingDetailModelDataDriverBookingDetailsDriverDetailsNotificationPreferences.fromJson(Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDriverDetailsProfilePic {
/*
{
  "key": "usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg"
}
*/

  String? key;
  String? url;

  BookingDetailModelDataDriverBookingDetailsDriverDetailsProfilePic({
    this.key,
    this.url,
  });
  BookingDetailModelDataDriverBookingDetailsDriverDetailsProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDriverDetailsIdPic {
/*
{
  "key": "idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg"
}
*/

  String? key;
  String? url;

  BookingDetailModelDataDriverBookingDetailsDriverDetailsIdPic({
    this.key,
    this.url,
  });
  BookingDetailModelDataDriverBookingDetailsDriverDetailsIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDriverDetails {
/*
{
  "_id": "65c228fd32f497dc57fdeff8",
  "fullName": "Amod",
  "phone": "1111122222",
  "email": "Amod@test.com",
  "dob": "2006-02-27",
  "gender": "Male",
  "isDriver": true,
  "referralCode": "C3072B8509",
  "profileStatus": true,
  "vehicleStatus": true,
  "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-02-06T12:41:33.824Z",
  "updatedAt": "2024-04-15T11:42:11.867Z",
  "idPic": {
    "key": "idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg"
  },
  "profilePic": {
    "key": "usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg"
  },
  "status": "active",
  "city": "ÓÉR",
  "pinkMode": false,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "rating": 0,
  "totalRides": 0,
  "vechileDetails": {
    "_id": "65c23bef32f497dc57fdf002",
    "driverId": "65c228fd32f497dc57fdeff8",
    "vehiclePic": {
      "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
      "_id": "6603d738ba3fdc24d7cbce50"
    },
    "model": "creta",
    "type": "Convertible",
    "color": "Black",
    "year": 2024,
    "licencePlate": "LA2024",
    "createdAt": "2024-02-06T14:02:23.061Z",
    "updatedAt": "2024-04-15T04:53:34.316Z"
  }
}
*/

  String? Id;
  String? fullName;
  String? phone;
  String? email;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  BookingDetailModelDataDriverBookingDetailsDriverDetailsIdPic? idPic;
  BookingDetailModelDataDriverBookingDetailsDriverDetailsProfilePic? profilePic;
  String? status;
  String? city;
  bool? pinkMode;
  BookingDetailModelDataDriverBookingDetailsDriverDetailsNotificationPreferences? notificationPreferences;
  int? rating;
  int? totalRides;
  BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetails? vechileDetails;

  BookingDetailModelDataDriverBookingDetailsDriverDetails({
    this.Id,
    this.fullName,
    this.phone,
    this.email,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.status,
    this.city,
    this.pinkMode,
    this.notificationPreferences,
    this.rating,
    this.totalRides,
    this.vechileDetails,
  });
  BookingDetailModelDataDriverBookingDetailsDriverDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null) ? BookingDetailModelDataDriverBookingDetailsDriverDetailsIdPic.fromJson(json['idPic']) : null;
    profilePic = (json['profilePic'] != null) ? BookingDetailModelDataDriverBookingDetailsDriverDetailsProfilePic.fromJson(json['profilePic']) : null;
    status = json['status']?.toString();
    city = json['city']?.toString();
    pinkMode = json['pinkMode'];
    notificationPreferences = (json['notificationPreferences'] != null) ? BookingDetailModelDataDriverBookingDetailsDriverDetailsNotificationPreferences.fromJson(json['notificationPreferences']) : null;
    rating = json['rating']?.toInt();
    totalRides = json['totalRides']?.toInt();
    vechileDetails = (json['vechileDetails'] != null) ? BookingDetailModelDataDriverBookingDetailsDriverDetailsVechileDetails.fromJson(json['vechileDetails']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['status'] = status;
    data['city'] = city;
    data['pinkMode'] = pinkMode;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    if (vechileDetails != null) {
      data['vechileDetails'] = vechileDetails!.toJson();
    }
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsRidersProfilePic {
/*
{
  "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
}
*/

  String? key;
  String? url;

  BookingDetailModelDataDriverBookingDetailsRidersProfilePic({
    this.key,
    this.url,
  });
  BookingDetailModelDataDriverBookingDetailsRidersProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsRidersIdPic {
/*
{
  "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
}
*/

  String? key;
  String? url;

  BookingDetailModelDataDriverBookingDetailsRidersIdPic({
    this.key,
    this.url,
  });
  BookingDetailModelDataDriverBookingDetailsRidersIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsRidersNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
}
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  BookingDetailModelDataDriverBookingDetailsRidersNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  BookingDetailModelDataDriverBookingDetailsRidersNotificationPreferences.fromJson(Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsRiders {
/*
{
  "_id": "661f6b6d2e30e94be6c6cf29",
  "pinkMode": false,
  "fullName": "Amar",
  "phone": "+19041490414",
  "email": "amar@yopmail.com",
  "city": "Bathinda",
  "dob": "2006-04-22",
  "gender": "Male",
  "isDriver": false,
  "referralCode": "S4613S0643",
  "profileStatus": true,
  "vehicleStatus": false,
  "status": "active",
  "wallet": 0,
  "rating": 0,
  "totalRides": 0,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-04-17T06:25:49.865Z",
  "updatedAt": "2024-04-17T08:27:02.124Z",
  "idPic": {
    "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
  },
  "profilePic": {
    "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
  }
}
*/

  String? Id;
  bool? pinkMode;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  int? rating;
  int? totalRides;
  BookingDetailModelDataDriverBookingDetailsRidersNotificationPreferences? notificationPreferences;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  BookingDetailModelDataDriverBookingDetailsRidersIdPic? idPic;
  BookingDetailModelDataDriverBookingDetailsRidersProfilePic? profilePic;

  BookingDetailModelDataDriverBookingDetailsRiders({
    this.Id,
    this.pinkMode,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.rating,
    this.totalRides,
    this.notificationPreferences,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
  });
  BookingDetailModelDataDriverBookingDetailsRiders.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    pinkMode = json['pinkMode'];
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    rating = json['rating']?.toInt();
    totalRides = json['totalRides']?.toInt();
    notificationPreferences = (json['notificationPreferences'] != null) ? BookingDetailModelDataDriverBookingDetailsRidersNotificationPreferences.fromJson(json['notificationPreferences']) : null;
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null) ? BookingDetailModelDataDriverBookingDetailsRidersIdPic.fromJson(json['idPic']) : null;
    profilePic = (json['profilePic'] != null) ? BookingDetailModelDataDriverBookingDetailsRidersProfilePic.fromJson(json['profilePic']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['pinkMode'] = pinkMode;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsPreferencesOther {
/*
{
  "AppreciatesConversation": false,
  "EnjoysMusic": false,
  "SmokeFree": false,
  "PetFriendly": false,
  "WinterTires": false,
  "CoolingOrHeating": false,
  "BabySeat": false,
  "HeatedSeats": false
}
*/

  bool? AppreciatesConversation;
  bool? EnjoysMusic;
  bool? SmokeFree;
  bool? PetFriendly;
  bool? WinterTires;
  bool? CoolingOrHeating;
  bool? BabySeat;
  bool? HeatedSeats;

  BookingDetailModelDataDriverBookingDetailsPreferencesOther({
    this.AppreciatesConversation,
    this.EnjoysMusic,
    this.SmokeFree,
    this.PetFriendly,
    this.WinterTires,
    this.CoolingOrHeating,
    this.BabySeat,
    this.HeatedSeats,
  });
  BookingDetailModelDataDriverBookingDetailsPreferencesOther.fromJson(Map<String, dynamic> json) {
    AppreciatesConversation = json['AppreciatesConversation'];
    EnjoysMusic = json['EnjoysMusic'];
    SmokeFree = json['SmokeFree'];
    PetFriendly = json['PetFriendly'];
    WinterTires = json['WinterTires'];
    CoolingOrHeating = json['CoolingOrHeating'];
    BabySeat = json['BabySeat'];
    HeatedSeats = json['HeatedSeats'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AppreciatesConversation'] = AppreciatesConversation;
    data['EnjoysMusic'] = EnjoysMusic;
    data['SmokeFree'] = SmokeFree;
    data['PetFriendly'] = PetFriendly;
    data['WinterTires'] = WinterTires;
    data['CoolingOrHeating'] = CoolingOrHeating;
    data['BabySeat'] = BabySeat;
    data['HeatedSeats'] = HeatedSeats;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsPreferences {
/*
{
  "luggageType": "No",
  "other": {
    "AppreciatesConversation": false,
    "EnjoysMusic": false,
    "SmokeFree": false,
    "PetFriendly": false,
    "WinterTires": false,
    "CoolingOrHeating": false,
    "BabySeat": false,
    "HeatedSeats": false
  }
}
*/

  String? luggageType;
  BookingDetailModelDataDriverBookingDetailsPreferencesOther? other;

  BookingDetailModelDataDriverBookingDetailsPreferences({
    this.luggageType,
    this.other,
  });
  BookingDetailModelDataDriverBookingDetailsPreferences.fromJson(Map<String, dynamic> json) {
    luggageType = json['luggageType']?.toString();
    other = (json['other'] != null) ? BookingDetailModelDataDriverBookingDetailsPreferencesOther.fromJson(json['other']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['luggageType'] = luggageType;
    if (other != null) {
      data['other'] = other!.toJson();
    }
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsReturnTrip {
/*
{
  "isReturnTrip": false,
  "returnDate": "null",
  "returnTime": ""
}
*/

  bool? isReturnTrip;
  String? returnDate;
  String? returnTime;

  BookingDetailModelDataDriverBookingDetailsReturnTrip({
    this.isReturnTrip,
    this.returnDate,
    this.returnTime,
  });
  BookingDetailModelDataDriverBookingDetailsReturnTrip.fromJson(Map<String, dynamic> json) {
    isReturnTrip = json['isReturnTrip'];
    returnDate = json['returnDate']?.toString();
    returnTime = json['returnTime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isReturnTrip'] = isReturnTrip;
    data['returnDate'] = returnDate;
    data['returnTime'] = returnTime;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsRecurringTrip {
/*
{
  "recurringTripDays": [
    ""
  ],
  "recurringTripIds": [
    ""
  ]
}
*/

  List<String?>? recurringTripDays;
  List<String?>? recurringTripIds;

  BookingDetailModelDataDriverBookingDetailsRecurringTrip({
    this.recurringTripDays,
    this.recurringTripIds,
  });
  BookingDetailModelDataDriverBookingDetailsRecurringTrip.fromJson(Map<String, dynamic> json) {
    if (json['recurringTripDays'] != null) {
      final v = json['recurringTripDays'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      recurringTripDays = arr0;
    }
    if (json['recurringTripIds'] != null) {
      final v = json['recurringTripIds'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      recurringTripIds = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (recurringTripDays != null) {
      final v = recurringTripDays;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripDays'] = arr0;
    }
    if (recurringTripIds != null) {
      final v = recurringTripIds;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripIds'] = arr0;
    }
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsStops {
/*
{
  "name": "",
  "type": "Point",
  "coordinates": [
    0
  ],
  "originToStopFair": "",
  "stopToStopFair": "",
  "stopTodestinationFair": "null",
  "_id": "661f63722e30e94be6c6cf20"
}
*/

  String? name;
  String? type;
  List<int?>? coordinates;
  String? originToStopFair;
  String? stopToStopFair;
  String? stopTodestinationFair;
  String? Id;

  BookingDetailModelDataDriverBookingDetailsStops({
    this.name,
    this.type,
    this.coordinates,
    this.originToStopFair,
    this.stopToStopFair,
    this.stopTodestinationFair,
    this.Id,
  });
  BookingDetailModelDataDriverBookingDetailsStops.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      coordinates = arr0;
    }
    originToStopFair = json['originToStopFair']?.toString();
    stopToStopFair = json['stopToStopFair']?.toString();
    stopTodestinationFair = json['stopTodestinationFair']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originToStopFair'] = originToStopFair;
    data['stopToStopFair'] = stopToStopFair;
    data['stopTodestinationFair'] = stopTodestinationFair;
    data['_id'] = Id;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsDestination {
/*
{
  "name": "SH 16, Moga",
  "type": "Point",
  "coordinates": [
    75.17344709999999
  ]
}
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  BookingDetailModelDataDriverBookingDetailsDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  BookingDetailModelDataDriverBookingDetailsDestination.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetailsOrigin {
/*
{
  "name": "Shaheed Nand Singh Chowk, Bathinda",
  "type": "Point",
  "coordinates": [
    74.9454745
  ],
  "originDestinationFair": "10"
}
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  BookingDetailModelDataDriverBookingDetailsOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  BookingDetailModelDataDriverBookingDetailsOrigin.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class BookingDetailModelDataDriverBookingDetails {
/*
{
  "_id": "661f63722e30e94be6c6cf1f",
  "driverId": "65c228fd32f497dc57fdeff8",
  "origin": {
    "name": "Shaheed Nand Singh Chowk, Bathinda",
    "type": "Point",
    "coordinates": [
      74.9454745
    ],
    "originDestinationFair": "10"
  },
  "destination": {
    "name": "SH 16, Moga",
    "type": "Point",
    "coordinates": [
      75.17344709999999
    ]
  },
  "stops": [
    {
      "name": "",
      "type": "Point",
      "coordinates": [
        0
      ],
      "originToStopFair": "",
      "stopToStopFair": "",
      "stopTodestinationFair": "null",
      "_id": "661f63722e30e94be6c6cf20"
    }
  ],
  "tripType": "oneTime",
  "recurringTrip": {
    "recurringTripDays": [
      ""
    ],
    "recurringTripIds": [
      ""
    ]
  },
  "date": "2024-04-17T00:00:00.000Z",
  "time": "",
  "returnTrip": {
    "isReturnTrip": false,
    "returnDate": "null",
    "returnTime": ""
  },
  "arrivalDate": "null",
  "arrivalTime": "null",
  "seatAvailable": 0,
  "preferences": {
    "luggageType": "No",
    "other": {
      "AppreciatesConversation": false,
      "EnjoysMusic": false,
      "SmokeFree": false,
      "PetFriendly": false,
      "WinterTires": false,
      "CoolingOrHeating": false,
      "BabySeat": false,
      "HeatedSeats": false
    }
  },
  "isStarted": true,
  "isCompleted": false,
  "isCancelled": false,
  "riders": [
    {
      "_id": "661f6b6d2e30e94be6c6cf29",
      "pinkMode": false,
      "fullName": "Amar",
      "phone": "+19041490414",
      "email": "amar@yopmail.com",
      "city": "Bathinda",
      "dob": "2006-04-22",
      "gender": "Male",
      "isDriver": false,
      "referralCode": "S4613S0643",
      "profileStatus": true,
      "vehicleStatus": false,
      "status": "active",
      "wallet": 0,
      "rating": 0,
      "totalRides": 0,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": true,
        "offers": true
      },
      "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-04-17T06:25:49.865Z",
      "updatedAt": "2024-04-17T08:27:02.124Z",
      "idPic": {
        "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
      },
      "profilePic": {
        "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
      }
    }
  ],
  "drivers": [
    ""
  ],
  "description": "Testing",
  "createdAt": "2024-04-17T05:51:46.792Z",
  "updatedAt": "2024-04-17T11:43:48.686Z",
  "driverDetails": {
    "_id": "65c228fd32f497dc57fdeff8",
    "fullName": "Amod",
    "phone": "1111122222",
    "email": "Amod@test.com",
    "dob": "2006-02-27",
    "gender": "Male",
    "isDriver": true,
    "referralCode": "C3072B8509",
    "profileStatus": true,
    "vehicleStatus": true,
    "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
    "firebaseSignInProvider": "phone",
    "createdAt": "2024-02-06T12:41:33.824Z",
    "updatedAt": "2024-04-15T11:42:11.867Z",
    "idPic": {
      "key": "idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg"
    },
    "profilePic": {
      "key": "usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg"
    },
    "status": "active",
    "city": "ÓÉR",
    "pinkMode": false,
    "notificationPreferences": {
      "trip": true,
      "alerts": true,
      "payments": true,
      "transactions": true,
      "offers": true
    },
    "rating": 0,
    "totalRides": 0,
    "vechileDetails": {
      "_id": "65c23bef32f497dc57fdf002",
      "driverId": "65c228fd32f497dc57fdeff8",
      "vehiclePic": {
        "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
        "_id": "6603d738ba3fdc24d7cbce50"
      },
      "model": "creta",
      "type": "Convertible",
      "color": "Black",
      "year": 2024,
      "licencePlate": "LA2024",
      "createdAt": "2024-02-06T14:02:23.061Z",
      "updatedAt": "2024-04-15T04:53:34.316Z"
    }
  }
}
*/

  String? Id;
  String? driverId;
  BookingDetailModelDataDriverBookingDetailsOrigin? origin;
  BookingDetailModelDataDriverBookingDetailsDestination? destination;
  List<BookingDetailModelDataDriverBookingDetailsStops?>? stops;
  String? tripType;
  BookingDetailModelDataDriverBookingDetailsRecurringTrip? recurringTrip;
  String? date;
  String? time;
  BookingDetailModelDataDriverBookingDetailsReturnTrip? returnTrip;
  String? arrivalDate;
  String? arrivalTime;
  int? seatAvailable;
  BookingDetailModelDataDriverBookingDetailsPreferences? preferences;
  bool? isStarted;
  bool? isCompleted;
  bool? isCancelled;
  List<BookingDetailModelDataDriverBookingDetailsRiders?>? riders;
  List<String?>? drivers;
  String? description;
  String? createdAt;
  String? updatedAt;
  BookingDetailModelDataDriverBookingDetailsDriverDetails? driverDetails;

  BookingDetailModelDataDriverBookingDetails({
    this.Id,
    this.driverId,
    this.origin,
    this.destination,
    this.stops,
    this.tripType,
    this.recurringTrip,
    this.date,
    this.time,
    this.returnTrip,
    this.arrivalDate,
    this.arrivalTime,
    this.seatAvailable,
    this.preferences,
    this.isStarted,
    this.isCompleted,
    this.isCancelled,
    this.riders,
    this.drivers,
    this.description,
    this.createdAt,
    this.updatedAt,
    this.driverDetails,
  });
  BookingDetailModelDataDriverBookingDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    origin = (json['origin'] != null) ? BookingDetailModelDataDriverBookingDetailsOrigin.fromJson(json['origin']) : null;
    destination = (json['destination'] != null) ? BookingDetailModelDataDriverBookingDetailsDestination.fromJson(json['destination']) : null;
    if (json['stops'] != null) {
      final v = json['stops'];
      final arr0 = <BookingDetailModelDataDriverBookingDetailsStops>[];
      v.forEach((v) {
        arr0.add(BookingDetailModelDataDriverBookingDetailsStops.fromJson(v));
      });
      stops = arr0;
    }
    tripType = json['tripType']?.toString();
    recurringTrip = (json['recurringTrip'] != null) ? BookingDetailModelDataDriverBookingDetailsRecurringTrip.fromJson(json['recurringTrip']) : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    returnTrip = (json['returnTrip'] != null) ? BookingDetailModelDataDriverBookingDetailsReturnTrip.fromJson(json['returnTrip']) : null;
    arrivalDate = json['arrivalDate']?.toString();
    arrivalTime = json['arrivalTime']?.toString();
    seatAvailable = json['seatAvailable']?.toInt();
    preferences = (json['preferences'] != null) ? BookingDetailModelDataDriverBookingDetailsPreferences.fromJson(json['preferences']) : null;
    isStarted = json['isStarted'];
    isCompleted = json['isCompleted'];
    isCancelled = json['isCancelled'];
    if (json['riders'] != null) {
      final v = json['riders'];
      final arr0 = <BookingDetailModelDataDriverBookingDetailsRiders>[];
      v.forEach((v) {
        arr0.add(BookingDetailModelDataDriverBookingDetailsRiders.fromJson(v));
      });
      riders = arr0;
    }
    if (json['drivers'] != null) {
      final v = json['drivers'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      drivers = arr0;
    }
    description = json['description']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    driverDetails = (json['driverDetails'] != null) ? BookingDetailModelDataDriverBookingDetailsDriverDetails.fromJson(json['driverDetails']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    if (stops != null) {
      final v = stops;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['stops'] = arr0;
    }
    data['tripType'] = tripType;
    if (recurringTrip != null) {
      data['recurringTrip'] = recurringTrip!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (returnTrip != null) {
      data['returnTrip'] = returnTrip!.toJson();
    }
    data['arrivalDate'] = arrivalDate;
    data['arrivalTime'] = arrivalTime;
    data['seatAvailable'] = seatAvailable;
    if (preferences != null) {
      data['preferences'] = preferences!.toJson();
    }
    data['isStarted'] = isStarted;
    data['isCompleted'] = isCompleted;
    data['isCancelled'] = isCancelled;
    if (riders != null) {
      final v = riders;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['riders'] = arr0;
    }
    if (drivers != null) {
      final v = drivers;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['drivers'] = arr0;
    }
    data['description'] = description;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (driverDetails != null) {
      data['driverDetails'] = driverDetails!.toJson();
    }
    return data;
  }
}

class BookingDetailModelDataDropOffStatus {
/*
{
  "isDropOff": false
}
*/

  bool? isDropOff;

  BookingDetailModelDataDropOffStatus({
    this.isDropOff,
  });
  BookingDetailModelDataDropOffStatus.fromJson(Map<String, dynamic> json) {
    isDropOff = json['isDropOff'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isDropOff'] = isDropOff;
    return data;
  }
}

class BookingDetailModelDataPickUpStatus {
/*
{
  "isPickUp": false
}
*/

  bool? isPickUp;

  BookingDetailModelDataPickUpStatus({
    this.isPickUp,
  });
  BookingDetailModelDataPickUpStatus.fromJson(Map<String, dynamic> json) {
    isPickUp = json['isPickUp'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isPickUp'] = isPickUp;
    return data;
  }
}

class BookingDetailModelData {
/*
{
  "_id": "661f88007c6897bb8928d7fe",
  "driverRideId": "661f63722e30e94be6c6cf1f",
  "riderRideId": "661f88007c6897bb8928d7fc",
  "distance": "80.80549675918209",
  "cancelByDriver": false,
  "cancelByRider": false,
  "confirmByRider": true,
  "confirmByDriver": true,
  "pickUpStatus": {
    "isPickUp": false
  },
  "dropOffStatus": {
    "isDropOff": false
  },
  "isCompleted": false,
  "driverId": "65c228fd32f497dc57fdeff8",
  "createdAt": "2024-04-17T08:27:44.995Z",
  "updatedAt": "2024-04-17T10:14:35.518Z",
  "driverBookingDetails": {
    "_id": "661f63722e30e94be6c6cf1f",
    "driverId": "65c228fd32f497dc57fdeff8",
    "origin": {
      "name": "Shaheed Nand Singh Chowk, Bathinda",
      "type": "Point",
      "coordinates": [
        74.9454745
      ],
      "originDestinationFair": "10"
    },
    "destination": {
      "name": "SH 16, Moga",
      "type": "Point",
      "coordinates": [
        75.17344709999999
      ]
    },
    "stops": [
      {
        "name": "",
        "type": "Point",
        "coordinates": [
          0
        ],
        "originToStopFair": "",
        "stopToStopFair": "",
        "stopTodestinationFair": "null",
        "_id": "661f63722e30e94be6c6cf20"
      }
    ],
    "tripType": "oneTime",
    "recurringTrip": {
      "recurringTripDays": [
        ""
      ],
      "recurringTripIds": [
        ""
      ]
    },
    "date": "2024-04-17T00:00:00.000Z",
    "time": "",
    "returnTrip": {
      "isReturnTrip": false,
      "returnDate": "null",
      "returnTime": ""
    },
    "arrivalDate": "null",
    "arrivalTime": "null",
    "seatAvailable": 0,
    "preferences": {
      "luggageType": "No",
      "other": {
        "AppreciatesConversation": false,
        "EnjoysMusic": false,
        "SmokeFree": false,
        "PetFriendly": false,
        "WinterTires": false,
        "CoolingOrHeating": false,
        "BabySeat": false,
        "HeatedSeats": false
      }
    },
    "isStarted": true,
    "isCompleted": false,
    "isCancelled": false,
    "riders": [
      {
        "_id": "661f6b6d2e30e94be6c6cf29",
        "pinkMode": false,
        "fullName": "Amar",
        "phone": "+19041490414",
        "email": "amar@yopmail.com",
        "city": "Bathinda",
        "dob": "2006-04-22",
        "gender": "Male",
        "isDriver": false,
        "referralCode": "S4613S0643",
        "profileStatus": true,
        "vehicleStatus": false,
        "status": "active",
        "wallet": 0,
        "rating": 0,
        "totalRides": 0,
        "notificationPreferences": {
          "trip": true,
          "alerts": true,
          "payments": true,
          "transactions": true,
          "offers": true
        },
        "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
        "firebaseSignInProvider": "phone",
        "createdAt": "2024-04-17T06:25:49.865Z",
        "updatedAt": "2024-04-17T08:27:02.124Z",
        "idPic": {
          "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
        },
        "profilePic": {
          "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
        }
      }
    ],
    "drivers": [
      ""
    ],
    "description": "Testing",
    "createdAt": "2024-04-17T05:51:46.792Z",
    "updatedAt": "2024-04-17T11:43:48.686Z",
    "driverDetails": {
      "_id": "65c228fd32f497dc57fdeff8",
      "fullName": "Amod",
      "phone": "1111122222",
      "email": "Amod@test.com",
      "dob": "2006-02-27",
      "gender": "Male",
      "isDriver": true,
      "referralCode": "C3072B8509",
      "profileStatus": true,
      "vehicleStatus": true,
      "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-02-06T12:41:33.824Z",
      "updatedAt": "2024-04-15T11:42:11.867Z",
      "idPic": {
        "key": "idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg"
      },
      "profilePic": {
        "key": "usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg"
      },
      "status": "active",
      "city": "ÓÉR",
      "pinkMode": false,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": true,
        "offers": true
      },
      "rating": 0,
      "totalRides": 0,
      "vechileDetails": {
        "_id": "65c23bef32f497dc57fdf002",
        "driverId": "65c228fd32f497dc57fdeff8",
        "vehiclePic": {
          "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
          "_id": "6603d738ba3fdc24d7cbce50"
        },
        "model": "creta",
        "type": "Convertible",
        "color": "Black",
        "year": 2024,
        "licencePlate": "LA2024",
        "createdAt": "2024-02-06T14:02:23.061Z",
        "updatedAt": "2024-04-15T04:53:34.316Z"
      }
    }
  },
  "riderBookingDetails": {
    "_id": "661f88007c6897bb8928d7fc",
    "riderId": "661f6b6d2e30e94be6c6cf29",
    "origin": {
      "name": "Shaheed Nand Singh Chowk, Bathinda",
      "type": "Point",
      "coordinates": [
        74.9454745
      ],
      "originDestinationFair": "null"
    },
    "destination": {
      "name": "SH 16, Moga",
      "type": "Point",
      "coordinates": [
        75.17344709999999
      ]
    },
    "tripType": "null",
    "recurringTrip": {
      "recurringTripIds": [
        ""
      ],
      "recurringTripDays": [
        ""
      ]
    },
    "date": "null",
    "time": "",
    "returnTrip": {
      "returnTripId": "null",
      "isReturnTrip": false,
      "returnDate": "null",
      "returnTime": "null"
    },
    "arrivalDate": "null",
    "arrivalTime": "null",
    "seatAvailable": 1,
    "preferences": {
      "other": {
        "AppreciatesConversation": false,
        "EnjoysMusic": false,
        "SmokeFree": false,
        "PetFriendly": false,
        "WinterTires": false,
        "CoolingOrHeating": false,
        "BabySeat": false,
        "HeatedSeats": false
      },
      "luggageType": "null"
    },
    "isStarted": false,
    "isCompleted": false,
    "isCancelled": false,
    "riders": [
      ""
    ],
    "drivers": [
      ""
    ],
    "description": "",
    "createdAt": "2024-04-17T08:27:44.825Z",
    "updatedAt": "2024-04-17T08:27:44.825Z",
    "riderDetails": {
      "_id": "661f6b6d2e30e94be6c6cf29",
      "pinkMode": false,
      "fullName": "Amar",
      "phone": "+19041490414",
      "email": "amar@yopmail.com",
      "city": "Bathinda",
      "dob": "2006-04-22",
      "gender": "Male",
      "isDriver": false,
      "referralCode": "S4613S0643",
      "profileStatus": true,
      "vehicleStatus": false,
      "status": "active",
      "wallet": 0,
      "rating": 0,
      "totalRides": 0,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": true,
        "offers": true
      },
      "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-04-17T06:25:49.865Z",
      "updatedAt": "2024-04-17T08:27:02.124Z",
      "idPic": {
        "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
      },
      "profilePic": {
        "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
      }
    }
  }
}
*/

  String? Id;
  String? driverRideId;
  String? riderRideId;
  String? distance;
  bool? cancelByDriver;
  bool? cancelByRider;
  bool? confirmByRider;
  bool? confirmByDriver;
  BookingDetailModelDataPickUpStatus? pickUpStatus;
  BookingDetailModelDataDropOffStatus? dropOffStatus;
  bool? isCompleted;
  String? driverId;
  String? createdAt;
  String? updatedAt;
  BookingDetailModelDataDriverBookingDetails? driverBookingDetails;
  BookingDetailModelDataRiderBookingDetails? riderBookingDetails;

  BookingDetailModelData({
    this.Id,
    this.driverRideId,
    this.riderRideId,
    this.distance,
    this.cancelByDriver,
    this.cancelByRider,
    this.confirmByRider,
    this.confirmByDriver,
    this.pickUpStatus,
    this.dropOffStatus,
    this.isCompleted,
    this.driverId,
    this.createdAt,
    this.updatedAt,
    this.driverBookingDetails,
    this.riderBookingDetails,
  });
  BookingDetailModelData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverRideId = json['driverRideId']?.toString();
    riderRideId = json['riderRideId']?.toString();
    distance = json['distance']?.toString();
    cancelByDriver = json['cancelByDriver'];
    cancelByRider = json['cancelByRider'];
    confirmByRider = json['confirmByRider'];
    confirmByDriver = json['confirmByDriver'];
    pickUpStatus = (json['pickUpStatus'] != null) ? BookingDetailModelDataPickUpStatus.fromJson(json['pickUpStatus']) : null;
    dropOffStatus = (json['dropOffStatus'] != null) ? BookingDetailModelDataDropOffStatus.fromJson(json['dropOffStatus']) : null;
    isCompleted = json['isCompleted'];
    driverId = json['driverId']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    driverBookingDetails = (json['driverBookingDetails'] != null) ? BookingDetailModelDataDriverBookingDetails.fromJson(json['driverBookingDetails']) : null;
    riderBookingDetails = (json['riderBookingDetails'] != null) ? BookingDetailModelDataRiderBookingDetails.fromJson(json['riderBookingDetails']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverRideId'] = driverRideId;
    data['riderRideId'] = riderRideId;
    data['distance'] = distance;
    data['cancelByDriver'] = cancelByDriver;
    data['cancelByRider'] = cancelByRider;
    data['confirmByRider'] = confirmByRider;
    data['confirmByDriver'] = confirmByDriver;
    if (pickUpStatus != null) {
      data['pickUpStatus'] = pickUpStatus!.toJson();
    }
    if (dropOffStatus != null) {
      data['dropOffStatus'] = dropOffStatus!.toJson();
    }
    data['isCompleted'] = isCompleted;
    data['driverId'] = driverId;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (driverBookingDetails != null) {
      data['driverBookingDetails'] = driverBookingDetails!.toJson();
    }
    if (riderBookingDetails != null) {
      data['riderBookingDetails'] = riderBookingDetails!.toJson();
    }
    return data;
  }
}

class BookingDetailModel {
/*
{
  "status": true,
  "message": "Boooking details found.",
  "data": {
    "_id": "661f88007c6897bb8928d7fe",
    "driverRideId": "661f63722e30e94be6c6cf1f",
    "riderRideId": "661f88007c6897bb8928d7fc",
    "distance": "80.80549675918209",
    "cancelByDriver": false,
    "cancelByRider": false,
    "confirmByRider": true,
    "confirmByDriver": true,
    "pickUpStatus": {
      "isPickUp": false
    },
    "dropOffStatus": {
      "isDropOff": false
    },
    "isCompleted": false,
    "driverId": "65c228fd32f497dc57fdeff8",
    "createdAt": "2024-04-17T08:27:44.995Z",
    "updatedAt": "2024-04-17T10:14:35.518Z",
    "driverBookingDetails": {
      "_id": "661f63722e30e94be6c6cf1f",
      "driverId": "65c228fd32f497dc57fdeff8",
      "origin": {
        "name": "Shaheed Nand Singh Chowk, Bathinda",
        "type": "Point",
        "coordinates": [
          74.9454745
        ],
        "originDestinationFair": "10"
      },
      "destination": {
        "name": "SH 16, Moga",
        "type": "Point",
        "coordinates": [
          75.17344709999999
        ]
      },
      "stops": [
        {
          "name": "",
          "type": "Point",
          "coordinates": [
            0
          ],
          "originToStopFair": "",
          "stopToStopFair": "",
          "stopTodestinationFair": "null",
          "_id": "661f63722e30e94be6c6cf20"
        }
      ],
      "tripType": "oneTime",
      "recurringTrip": {
        "recurringTripDays": [
          ""
        ],
        "recurringTripIds": [
          ""
        ]
      },
      "date": "2024-04-17T00:00:00.000Z",
      "time": "",
      "returnTrip": {
        "isReturnTrip": false,
        "returnDate": "null",
        "returnTime": ""
      },
      "arrivalDate": "null",
      "arrivalTime": "null",
      "seatAvailable": 0,
      "preferences": {
        "luggageType": "No",
        "other": {
          "AppreciatesConversation": false,
          "EnjoysMusic": false,
          "SmokeFree": false,
          "PetFriendly": false,
          "WinterTires": false,
          "CoolingOrHeating": false,
          "BabySeat": false,
          "HeatedSeats": false
        }
      },
      "isStarted": true,
      "isCompleted": false,
      "isCancelled": false,
      "riders": [
        {
          "_id": "661f6b6d2e30e94be6c6cf29",
          "pinkMode": false,
          "fullName": "Amar",
          "phone": "+19041490414",
          "email": "amar@yopmail.com",
          "city": "Bathinda",
          "dob": "2006-04-22",
          "gender": "Male",
          "isDriver": false,
          "referralCode": "S4613S0643",
          "profileStatus": true,
          "vehicleStatus": false,
          "status": "active",
          "wallet": 0,
          "rating": 0,
          "totalRides": 0,
          "notificationPreferences": {
            "trip": true,
            "alerts": true,
            "payments": true,
            "transactions": true,
            "offers": true
          },
          "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
          "firebaseSignInProvider": "phone",
          "createdAt": "2024-04-17T06:25:49.865Z",
          "updatedAt": "2024-04-17T08:27:02.124Z",
          "idPic": {
            "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
          },
          "profilePic": {
            "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
          }
        }
      ],
      "drivers": [
        ""
      ],
      "description": "Testing",
      "createdAt": "2024-04-17T05:51:46.792Z",
      "updatedAt": "2024-04-17T11:43:48.686Z",
      "driverDetails": {
        "_id": "65c228fd32f497dc57fdeff8",
        "fullName": "Amod",
        "phone": "1111122222",
        "email": "Amod@test.com",
        "dob": "2006-02-27",
        "gender": "Male",
        "isDriver": true,
        "referralCode": "C3072B8509",
        "profileStatus": true,
        "vehicleStatus": true,
        "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
        "firebaseSignInProvider": "phone",
        "createdAt": "2024-02-06T12:41:33.824Z",
        "updatedAt": "2024-04-15T11:42:11.867Z",
        "idPic": {
          "key": "idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9cb41c3d-d758-4fe0-9e7a-d9c369e1fa9d-1000065629.jpg"
        },
        "profilePic": {
          "key": "usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c0cc2331-a360-4296-be80-2b066b8caa88-1000065629.jpg"
        },
        "status": "active",
        "city": "ÓÉR",
        "pinkMode": false,
        "notificationPreferences": {
          "trip": true,
          "alerts": true,
          "payments": true,
          "transactions": true,
          "offers": true
        },
        "rating": 0,
        "totalRides": 0,
        "vechileDetails": {
          "_id": "65c23bef32f497dc57fdf002",
          "driverId": "65c228fd32f497dc57fdeff8",
          "vehiclePic": {
            "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
            "_id": "6603d738ba3fdc24d7cbce50"
          },
          "model": "creta",
          "type": "Convertible",
          "color": "Black",
          "year": 2024,
          "licencePlate": "LA2024",
          "createdAt": "2024-02-06T14:02:23.061Z",
          "updatedAt": "2024-04-15T04:53:34.316Z"
        }
      }
    },
    "riderBookingDetails": {
      "_id": "661f88007c6897bb8928d7fc",
      "riderId": "661f6b6d2e30e94be6c6cf29",
      "origin": {
        "name": "Shaheed Nand Singh Chowk, Bathinda",
        "type": "Point",
        "coordinates": [
          74.9454745
        ],
        "originDestinationFair": "null"
      },
      "destination": {
        "name": "SH 16, Moga",
        "type": "Point",
        "coordinates": [
          75.17344709999999
        ]
      },
      "tripType": "null",
      "recurringTrip": {
        "recurringTripIds": [
          ""
        ],
        "recurringTripDays": [
          ""
        ]
      },
      "date": "null",
      "time": "",
      "returnTrip": {
        "returnTripId": "null",
        "isReturnTrip": false,
        "returnDate": "null",
        "returnTime": "null"
      },
      "arrivalDate": "null",
      "arrivalTime": "null",
      "seatAvailable": 1,
      "preferences": {
        "other": {
          "AppreciatesConversation": false,
          "EnjoysMusic": false,
          "SmokeFree": false,
          "PetFriendly": false,
          "WinterTires": false,
          "CoolingOrHeating": false,
          "BabySeat": false,
          "HeatedSeats": false
        },
        "luggageType": "null"
      },
      "isStarted": false,
      "isCompleted": false,
      "isCancelled": false,
      "riders": [
        ""
      ],
      "drivers": [
        ""
      ],
      "description": "",
      "createdAt": "2024-04-17T08:27:44.825Z",
      "updatedAt": "2024-04-17T08:27:44.825Z",
      "riderDetails": {
        "_id": "661f6b6d2e30e94be6c6cf29",
        "pinkMode": false,
        "fullName": "Amar",
        "phone": "+19041490414",
        "email": "amar@yopmail.com",
        "city": "Bathinda",
        "dob": "2006-04-22",
        "gender": "Male",
        "isDriver": false,
        "referralCode": "S4613S0643",
        "profileStatus": true,
        "vehicleStatus": false,
        "status": "active",
        "wallet": 0,
        "rating": 0,
        "totalRides": 0,
        "notificationPreferences": {
          "trip": true,
          "alerts": true,
          "payments": true,
          "transactions": true,
          "offers": true
        },
        "firebaseUid": "xgqjRX7jlQVmjWH5EguYKmDsNTS2",
        "firebaseSignInProvider": "phone",
        "createdAt": "2024-04-17T06:25:49.865Z",
        "updatedAt": "2024-04-17T08:27:02.124Z",
        "idPic": {
          "key": "idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/49fa96f6-c783-42a0-8120-d7799044c4d6-compressed_image_picker_B2AF1AA2-9936-4263-BE6A-8B336B8B7496-95174-00002D11CE74D920.jpg"
        },
        "profilePic": {
          "key": "usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/ac11d443-b43e-49b3-ab1f-1c2526940922-compressed_image_picker_89D3D04F-F400-48C4-9980-B1775E6C0205-95174-00002D1496CDBB31.jpg"
        }
      }
    }
  }
}
*/

  bool? status;
  String? message;
  BookingDetailModelData? data;

  BookingDetailModel({
    this.status,
    this.message,
    this.data,
  });
  BookingDetailModel.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    data = (json['data'] != null) ? BookingDetailModelData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
