///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RideHistoryModelDataRidersNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  RideHistoryModelDataRidersNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  RideHistoryModelDataRidersNotificationPreferences.fromJson(
      Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class RideHistoryModelDataRidersIdPic {
/*
{
  "key": "idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
  "_id": "664b3d653732bc9ccad99165"
} 
*/

  String? key;
  String? url;
  String? Id;

  RideHistoryModelDataRidersIdPic({
    this.key,
    this.url,
    this.Id,
  });
  RideHistoryModelDataRidersIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class RideHistoryModelDataRidersProfilePic {
/*
{
  "key": "usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
  "_id": "664b3d653732bc9ccad99164"
} 
*/

  String? key;
  String? url;
  String? Id;

  RideHistoryModelDataRidersProfilePic({
    this.key,
    this.url,
    this.Id,
  });
  RideHistoryModelDataRidersProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class RideHistoryModelDataRiders {
/*
{
  "_id": "664b090f6a2411c4e1311a88",
  "isRegister": true,
  "role": "Admin",
  "pinkMode": false,
  "fullName": "Gagan",
  "phone": "+917777777777",
  "email": "gagan@yopmail.com",
  "city": "Hamilton",
  "profilePic": {
    "key": "usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
    "_id": "664b3d653732bc9ccad99164"
  },
  "idPic": {
    "key": "idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
    "_id": "664b3d653732bc9ccad99165"
  },
  "dob": "2006-05-25",
  "gender": "Female",
  "isDriver": true,
  "referralCode": "G0583X2372",
  "profileStatus": true,
  "vehicleStatus": true,
  "status": "active",
  "wallet": 0,
  "rating": 3.361111111111111,
  "totalRides": 0,
  "isRecurringTripEnabled": false,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "firebaseUid": "QyMqFd92cKb8XmwBZCT8p52himf1",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-05-20T08:25:51.820Z",
  "updatedAt": "2024-05-27T07:33:15.032Z"
} 
*/

  String? Id;
  bool? isRegister;
  String? role;
  bool? pinkMode;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  RideHistoryModelDataRidersProfilePic? profilePic;
  RideHistoryModelDataRidersIdPic? idPic;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  double? rating;
  int? totalRides;
  bool? isRecurringTripEnabled;
  RideHistoryModelDataRidersNotificationPreferences? notificationPreferences;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;

  RideHistoryModelDataRiders({
    this.Id,
    this.isRegister,
    this.role,
    this.pinkMode,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.profilePic,
    this.idPic,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.rating,
    this.totalRides,
    this.isRecurringTripEnabled,
    this.notificationPreferences,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
  });
  RideHistoryModelDataRiders.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    isRegister = json['isRegister'];
    role = json['role']?.toString();
    pinkMode = json['pinkMode'];
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    profilePic = (json['profilePic'] != null)
        ? RideHistoryModelDataRidersProfilePic.fromJson(json['profilePic'])
        : null;
    idPic = (json['idPic'] != null)
        ? RideHistoryModelDataRidersIdPic.fromJson(json['idPic'])
        : null;
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    rating = json['rating']?.toDouble();
    totalRides = json['totalRides']?.toInt();
    isRecurringTripEnabled = json['isRecurringTripEnabled'];
    notificationPreferences = (json['notificationPreferences'] != null)
        ? RideHistoryModelDataRidersNotificationPreferences.fromJson(
            json['notificationPreferences'])
        : null;
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['isRegister'] = isRegister;
    data['role'] = role;
    data['pinkMode'] = pinkMode;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    data['isRecurringTripEnabled'] = isRecurringTripEnabled;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class RideHistoryModelDataDriverNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": true,
  "offers": true
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  RideHistoryModelDataDriverNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  RideHistoryModelDataDriverNotificationPreferences.fromJson(
      Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class RideHistoryModelDataDriverProfilePic {
/*
{
  "key": "usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
  "_id": "664af3b5cd651d9acab11363"
} 
*/

  String? key;
  String? url;
  String? Id;

  RideHistoryModelDataDriverProfilePic({
    this.key,
    this.url,
    this.Id,
  });
  RideHistoryModelDataDriverProfilePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class RideHistoryModelDataDriverIdPic {
/*
{
  "key": "idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
  "_id": "664af3b5cd651d9acab11364"
} 
*/

  String? key;
  String? url;
  String? Id;

  RideHistoryModelDataDriverIdPic({
    this.key,
    this.url,
    this.Id,
  });
  RideHistoryModelDataDriverIdPic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class RideHistoryModelDataDriver {
/*
{
  "_id": "65c228fd32f497dc57fdeff8",
  "fullName": "Amar",
  "phone": "+11111122222",
  "email": "amar@ideausher.com",
  "dob": "2006-05-25",
  "gender": "Male",
  "isDriver": true,
  "referralCode": "C3072B8509",
  "profileStatus": true,
  "vehicleStatus": true,
  "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-02-06T12:41:33.824Z",
  "updatedAt": "2024-05-27T06:50:48.448Z",
  "idPic": {
    "key": "idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
    "_id": "664af3b5cd651d9acab11364"
  },
  "profilePic": {
    "key": "usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
    "_id": "664af3b5cd651d9acab11363"
  },
  "status": "active",
  "city": "Brampton",
  "pinkMode": false,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": true,
    "offers": true
  },
  "rating": 2.2222222222222223,
  "totalRides": 0,
  "isRegister": true,
  "role": "user"
} 
*/

  String? Id;
  String? fullName;
  String? phone;
  String? email;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  RideHistoryModelDataDriverIdPic? idPic;
  RideHistoryModelDataDriverProfilePic? profilePic;
  String? status;
  String? city;
  bool? pinkMode;
  RideHistoryModelDataDriverNotificationPreferences? notificationPreferences;
  double? rating;
  int? totalRides;
  bool? isRegister;
  String? role;

  RideHistoryModelDataDriver({
    this.Id,
    this.fullName,
    this.phone,
    this.email,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.status,
    this.city,
    this.pinkMode,
    this.notificationPreferences,
    this.rating,
    this.totalRides,
    this.isRegister,
    this.role,
  });
  RideHistoryModelDataDriver.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null)
        ? RideHistoryModelDataDriverIdPic.fromJson(json['idPic'])
        : null;
    profilePic = (json['profilePic'] != null)
        ? RideHistoryModelDataDriverProfilePic.fromJson(json['profilePic'])
        : null;
    status = json['status']?.toString();
    city = json['city']?.toString();
    pinkMode = json['pinkMode'];
    notificationPreferences = (json['notificationPreferences'] != null)
        ? RideHistoryModelDataDriverNotificationPreferences.fromJson(
            json['notificationPreferences'])
        : null;
    rating = json['rating']?.toDouble();
    totalRides = json['totalRides']?.toInt();
    isRegister = json['isRegister'];
    role = json['role']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['status'] = status;
    data['city'] = city;
    data['pinkMode'] = pinkMode;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    data['isRegister'] = isRegister;
    data['role'] = role;
    return data;
  }
}

class RideHistoryModelDataDestination {
/*
{
  "name": "Lake Rd, Division #23, Unorganized",
  "type": "Point",
  "coordinates": [
    -101.6819128
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  RideHistoryModelDataDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  RideHistoryModelDataDestination.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class RideHistoryModelDataOrigin {
/*
{
  "name": "River Rd, Division #23, Unorganized",
  "type": "Point",
  "coordinates": [
    -101.6720515
  ],
  "originDestinationFair": "100"
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  RideHistoryModelDataOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  RideHistoryModelDataOrigin.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class RideHistoryModelData {
/*
{
  "_id": "664d9278f9c34e0eb6a1650d",
  "origin": {
    "name": "River Rd, Division #23, Unorganized",
    "type": "Point",
    "coordinates": [
      -101.6720515
    ],
    "originDestinationFair": "100"
  },
  "destination": {
    "name": "Lake Rd, Division #23, Unorganized",
    "type": "Point",
    "coordinates": [
      -101.6819128
    ]
  },
  "date": "2024-05-22T12:05:03.255Z",
  "time": "",
  "driver": {
    "_id": "65c228fd32f497dc57fdeff8",
    "fullName": "Amar",
    "phone": "+11111122222",
    "email": "amar@ideausher.com",
    "dob": "2006-05-25",
    "gender": "Male",
    "isDriver": true,
    "referralCode": "C3072B8509",
    "profileStatus": true,
    "vehicleStatus": true,
    "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
    "firebaseSignInProvider": "phone",
    "createdAt": "2024-02-06T12:41:33.824Z",
    "updatedAt": "2024-05-27T06:50:48.448Z",
    "idPic": {
      "key": "idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
      "_id": "664af3b5cd651d9acab11364"
    },
    "profilePic": {
      "key": "usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
      "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
      "_id": "664af3b5cd651d9acab11363"
    },
    "status": "active",
    "city": "Brampton",
    "pinkMode": false,
    "notificationPreferences": {
      "trip": true,
      "alerts": true,
      "payments": true,
      "transactions": true,
      "offers": true
    },
    "rating": 2.2222222222222223,
    "totalRides": 0,
    "isRegister": true,
    "role": "user"
  },
  "riders": [
    {
      "_id": "664b090f6a2411c4e1311a88",
      "isRegister": true,
      "role": "Admin",
      "pinkMode": false,
      "fullName": "Gagan",
      "phone": "+917777777777",
      "email": "gagan@yopmail.com",
      "city": "Hamilton",
      "profilePic": {
        "key": "usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
        "_id": "664b3d653732bc9ccad99164"
      },
      "idPic": {
        "key": "idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
        "_id": "664b3d653732bc9ccad99165"
      },
      "dob": "2006-05-25",
      "gender": "Female",
      "isDriver": true,
      "referralCode": "G0583X2372",
      "profileStatus": true,
      "vehicleStatus": true,
      "status": "active",
      "wallet": 0,
      "rating": 3.361111111111111,
      "totalRides": 0,
      "isRecurringTripEnabled": false,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": true,
        "offers": true
      },
      "firebaseUid": "QyMqFd92cKb8XmwBZCT8p52himf1",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-05-20T08:25:51.820Z",
      "updatedAt": "2024-05-27T07:33:15.032Z"
    }
  ]
} 
*/

  String? Id;
  RideHistoryModelDataOrigin? origin;
  RideHistoryModelDataDestination? destination;
  String? date;
  String? time;
  RideHistoryModelDataDriver? driver;
  List<RideHistoryModelDataRiders?>? riders;

  RideHistoryModelData({
    this.Id,
    this.origin,
    this.destination,
    this.date,
    this.time,
    this.driver,
    this.riders,
  });
  RideHistoryModelData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    origin = (json['origin'] != null)
        ? RideHistoryModelDataOrigin.fromJson(json['origin'])
        : null;
    destination = (json['destination'] != null)
        ? RideHistoryModelDataDestination.fromJson(json['destination'])
        : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    driver = (json['driver'] != null)
        ? RideHistoryModelDataDriver.fromJson(json['driver'])
        : null;
    if (json['riders'] != null) {
      final v = json['riders'];
      final arr0 = <RideHistoryModelDataRiders>[];
      v.forEach((v) {
        arr0.add(RideHistoryModelDataRiders.fromJson(v));
      });
      riders = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (driver != null) {
      data['driver'] = driver!.toJson();
    }
    if (riders != null) {
      final v = riders;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['riders'] = arr0;
    }
    return data;
  }
}

class RideHistoryModel {
/*
{
  "status": true,
  "data": [
    {
      "_id": "664d9278f9c34e0eb6a1650d",
      "origin": {
        "name": "River Rd, Division #23, Unorganized",
        "type": "Point",
        "coordinates": [
          -101.6720515
        ],
        "originDestinationFair": "100"
      },
      "destination": {
        "name": "Lake Rd, Division #23, Unorganized",
        "type": "Point",
        "coordinates": [
          -101.6819128
        ]
      },
      "date": "2024-05-22T12:05:03.255Z",
      "time": "",
      "driver": {
        "_id": "65c228fd32f497dc57fdeff8",
        "fullName": "Amar",
        "phone": "+11111122222",
        "email": "amar@ideausher.com",
        "dob": "2006-05-25",
        "gender": "Male",
        "isDriver": true,
        "referralCode": "C3072B8509",
        "profileStatus": true,
        "vehicleStatus": true,
        "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
        "firebaseSignInProvider": "phone",
        "createdAt": "2024-02-06T12:41:33.824Z",
        "updatedAt": "2024-05-27T06:50:48.448Z",
        "idPic": {
          "key": "idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/14a1f67c-67d3-417a-88ab-de80318076ce-compressed_image_picker_27017447-33A6-4FD5-9E68-9E333A4519E7-80244-000007220A59499C.jpg",
          "_id": "664af3b5cd651d9acab11364"
        },
        "profilePic": {
          "key": "usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
          "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/343e91cd-5339-4cb2-ab54-bb2c5c85ef7b-compressed_image_picker_E10F697C-B897-4693-A1EE-3FAC86253315-80244-000007221A4BE6ED.jpg",
          "_id": "664af3b5cd651d9acab11363"
        },
        "status": "active",
        "city": "Brampton",
        "pinkMode": false,
        "notificationPreferences": {
          "trip": true,
          "alerts": true,
          "payments": true,
          "transactions": true,
          "offers": true
        },
        "rating": 2.2222222222222223,
        "totalRides": 0,
        "isRegister": true,
        "role": "user"
      },
      "riders": [
        {
          "_id": "664b090f6a2411c4e1311a88",
          "isRegister": true,
          "role": "Admin",
          "pinkMode": false,
          "fullName": "Gagan",
          "phone": "+917777777777",
          "email": "gagan@yopmail.com",
          "city": "Hamilton",
          "profilePic": {
            "key": "usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/448341dc-ad54-46c9-8d55-116d059f7358-compressed_image_picker_76EB2E72-E7D5-4F31-A3F0-A0ECC32E8669-12556-0000078B4CDF0493.jpg",
            "_id": "664b3d653732bc9ccad99164"
          },
          "idPic": {
            "key": "idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/03fb4f4e-c5d2-4532-b301-e2a2753b9bdd-compressed_image_picker_6D053889-80A9-42C8-91F6-2D6F41BCDAF6-12556-0000078B873B8FDE.jpg",
            "_id": "664b3d653732bc9ccad99165"
          },
          "dob": "2006-05-25",
          "gender": "Female",
          "isDriver": true,
          "referralCode": "G0583X2372",
          "profileStatus": true,
          "vehicleStatus": true,
          "status": "active",
          "wallet": 0,
          "rating": 3.361111111111111,
          "totalRides": 0,
          "isRecurringTripEnabled": false,
          "notificationPreferences": {
            "trip": true,
            "alerts": true,
            "payments": true,
            "transactions": true,
            "offers": true
          },
          "firebaseUid": "QyMqFd92cKb8XmwBZCT8p52himf1",
          "firebaseSignInProvider": "phone",
          "createdAt": "2024-05-20T08:25:51.820Z",
          "updatedAt": "2024-05-27T07:33:15.032Z"
        }
      ]
    }
  ],
  "message": "Record found."
} 
*/

  bool? status;
  List<RideHistoryModelData?>? data;
  String? message;

  RideHistoryModel({
    this.status,
    this.data,
    this.message,
  });
  RideHistoryModel.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <RideHistoryModelData>[];
      v.forEach((v) {
        arr0.add(RideHistoryModelData.fromJson(v));
      });
      this.data = arr0;
    }
    message = json['message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['message'] = message;
    return data;
  }
}
