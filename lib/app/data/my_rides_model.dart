///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
// ignore_for_file: non_constant_identifier_names, avoid_function_literals_in_foreach_calls

class MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsProfilePic {
/*
{
  "key": "usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile pic 1.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile%20pic%201.jpg"
} 
*/

  String? key;
  String? url;

  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsProfilePic({
    this.key,
    this.url,
  });
  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsProfilePic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsIdPic {
/*
{
  "key": "idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile pic 1.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile%20pic%201.jpg"
} 
*/

  String? key;
  String? url;

  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsIdPic({
    this.key,
    this.url,
  });
  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsIdPic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetails {
/*
{
  "_id": "65c2400c32f497dc57fdf007",
  "fullName": "Rekha Dutta",
  "phone": "+11234567567",
  "email": "rekha@test.com",
  "dob": "1996-02-22",
  "gender": "Female",
  "isDriver": true,
  "referralCode": "V0280Q1170",
  "profileStatus": true,
  "vehicleStatus": true,
  "firebaseUid": "7ip7bk892LOYGNlleO2ebucHidB3",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-02-06T14:19:56.214Z",
  "updatedAt": "2024-03-21T10:10:14.482Z",
  "idPic": {
    "key": "idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile pic 1.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile%20pic%201.jpg"
  },
  "profilePic": {
    "key": "usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile pic 1.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile%20pic%201.jpg"
  },
  "status": "active",
  "city": "Jaipur",
  "rating": 0,
  "totalRides": 0
} 
*/

  String? Id;
  String? fullName;
  String? phone;
  String? email;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsIdPic? idPic;
  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsProfilePic? profilePic;
  String? status;
  String? city;
  int? rating;
  int? totalRides;

  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetails({
    this.Id,
    this.fullName,
    this.phone,
    this.email,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.status,
    this.city,
    this.rating,
    this.totalRides,
  });
  MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null)
        ? MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsIdPic.fromJson(
            json['idPic'])
        : null;
    profilePic = (json['profilePic'] != null)
        ? MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetailsProfilePic
            .fromJson(json['profilePic'])
        : null;
    status = json['status']?.toString();
    city = json['city']?.toString();
    rating = json['rating']?.toInt();
    totalRides = json['totalRides']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['status'] = status;
    data['city'] = city;
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    return data;
  }
}

class MyRidesModelDataPostsInfoRiderPostsDetailsDestination {
/*
{
  "name": "Nashik,Nashik,Nashik Division",
  "type": "Point",
  "coordinates": [
    73.78980229999999
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  MyRidesModelDataPostsInfoRiderPostsDetailsDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  MyRidesModelDataPostsInfoRiderPostsDetailsDestination.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataPostsInfoRiderPostsDetailsOrigin {
/*
{
  "name": "Latur,Latur,Aurangabad Division",
  "type": "Point",
  "coordinates": [
    76.5603828
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  MyRidesModelDataPostsInfoRiderPostsDetailsOrigin({
    this.name,
    this.type,
    this.coordinates,
  });
  MyRidesModelDataPostsInfoRiderPostsDetailsOrigin.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataPostsInfoRiderPostsDetails {
/*
{
  "_id": "65e6c0a41d01b88a527df26e",
  "riderId": "65c2400c32f497dc57fdf007",
  "origin": {
    "name": "Latur,Latur,Aurangabad Division",
    "type": "Point",
    "coordinates": [
      76.5603828
    ]
  },
  "destination": {
    "name": "Nashik,Nashik,Nashik Division",
    "type": "Point",
    "coordinates": [
      73.78980229999999
    ]
  },
  "date": "2024-03-05T00:00:00.000Z",
  "time": "12:00 PM",
  "seatAvailable": 1,
  "createdAt": "2024-03-05T06:50:12.370Z",
  "updatedAt": "2024-03-05T06:50:12.370Z",
  "ridersDetails": [
    {
      "_id": "65c2400c32f497dc57fdf007",
      "fullName": "Rekha Dutta",
      "phone": "+11234567567",
      "email": "rekha@test.com",
      "dob": "1996-02-22",
      "gender": "Female",
      "isDriver": true,
      "referralCode": "V0280Q1170",
      "profileStatus": true,
      "vehicleStatus": true,
      "firebaseUid": "7ip7bk892LOYGNlleO2ebucHidB3",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-02-06T14:19:56.214Z",
      "updatedAt": "2024-03-21T10:10:14.482Z",
      "idPic": {
        "key": "idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile pic 1.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile%20pic%201.jpg"
      },
      "profilePic": {
        "key": "usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile pic 1.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile%20pic%201.jpg"
      },
      "status": "active",
      "city": "Jaipur",
      "rating": 0,
      "totalRides": 0
    }
  ]
} 
*/

  String? Id;
  String? riderId;
  MyRidesModelDataPostsInfoRiderPostsDetailsOrigin? origin;
  MyRidesModelDataPostsInfoRiderPostsDetailsDestination? destination;
  String? date;
  String? time;
  int? seatAvailable;
  String? createdAt;
  String? updatedAt;
  List<MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetails?>? ridersDetails;

  MyRidesModelDataPostsInfoRiderPostsDetails({
    this.Id,
    this.riderId,
    this.origin,
    this.destination,
    this.date,
    this.time,
    this.seatAvailable,
    this.createdAt,
    this.updatedAt,
    this.ridersDetails,
  });
  MyRidesModelDataPostsInfoRiderPostsDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    riderId = json['riderId']?.toString();
    origin = (json['origin'] != null)
        ? MyRidesModelDataPostsInfoRiderPostsDetailsOrigin.fromJson(
            json['origin'])
        : null;
    destination = (json['destination'] != null)
        ? MyRidesModelDataPostsInfoRiderPostsDetailsDestination.fromJson(
            json['destination'])
        : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    seatAvailable = json['seatAvailable']?.toInt();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    if (json['ridersDetails'] != null) {
      final v = json['ridersDetails'];
      final arr0 = <MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetails>[];
      v.forEach((v) {
        arr0.add(
            MyRidesModelDataPostsInfoRiderPostsDetailsRidersDetails.fromJson(
                v));
      });
      ridersDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['riderId'] = riderId;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    data['seatAvailable'] = seatAvailable;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (ridersDetails != null) {
      final v = ridersDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['ridersDetails'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataPostsInfoDropOffStatus {
/*
{
  "isDropOff": false
} 
*/

  bool? isDropOff;

  MyRidesModelDataPostsInfoDropOffStatus({
    this.isDropOff,
  });
  MyRidesModelDataPostsInfoDropOffStatus.fromJson(Map<String, dynamic> json) {
    isDropOff = json['isDropOff'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isDropOff'] = isDropOff;
    return data;
  }
}

class MyRidesModelDataPostsInfoPickUpStatus {
/*
{
  "isPickUp": false
} 
*/

  bool? isPickUp;

  MyRidesModelDataPostsInfoPickUpStatus({
    this.isPickUp,
  });
  MyRidesModelDataPostsInfoPickUpStatus.fromJson(Map<String, dynamic> json) {
    isPickUp = json['isPickUp'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isPickUp'] = isPickUp;
    return data;
  }
}

class MyRidesModelDataPostsInfo {
/*
{
  "_id": "65f1966cf4372ec0771125d1",
  "driverRideId": "65f1963df4372ec0771125bc",
  "riderRideId": "65e6c0a41d01b88a527df26e",
  "distance": "78",
  "cancelByDriver": false,
  "cancelByRider": false,
  "confirmByRider": true,
  "confirmByDriver": true,
  "pickUpStatus": {
    "isPickUp": false
  },
  "dropOffStatus": {
    "isDropOff": false
  },
  "isCompleted": false,
  "driverId": "65c228fd32f497dc57fdeff8",
  "createdAt": "2024-03-13T12:05:00.975Z",
  "updatedAt": "2024-03-13T12:05:15.414Z",
  "riderPostsDetails": [
    {
      "_id": "65e6c0a41d01b88a527df26e",
      "riderId": "65c2400c32f497dc57fdf007",
      "origin": {
        "name": "Latur,Latur,Aurangabad Division",
        "type": "Point",
        "coordinates": [
          76.5603828
        ]
      },
      "destination": {
        "name": "Nashik,Nashik,Nashik Division",
        "type": "Point",
        "coordinates": [
          73.78980229999999
        ]
      },
      "date": "2024-03-05T00:00:00.000Z",
      "time": "12:00 PM",
      "seatAvailable": 1,
      "createdAt": "2024-03-05T06:50:12.370Z",
      "updatedAt": "2024-03-05T06:50:12.370Z",
      "ridersDetails": [
        {
          "_id": "65c2400c32f497dc57fdf007",
          "fullName": "Rekha Dutta",
          "phone": "+11234567567",
          "email": "rekha@test.com",
          "dob": "1996-02-22",
          "gender": "Female",
          "isDriver": true,
          "referralCode": "V0280Q1170",
          "profileStatus": true,
          "vehicleStatus": true,
          "firebaseUid": "7ip7bk892LOYGNlleO2ebucHidB3",
          "firebaseSignInProvider": "phone",
          "createdAt": "2024-02-06T14:19:56.214Z",
          "updatedAt": "2024-03-21T10:10:14.482Z",
          "idPic": {
            "key": "idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile pic 1.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile%20pic%201.jpg"
          },
          "profilePic": {
            "key": "usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile pic 1.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile%20pic%201.jpg"
          },
          "status": "active",
          "city": "Jaipur",
          "rating": 0,
          "totalRides": 0
        }
      ]
    }
  ]
} 
*/

  String? Id;
  String? driverRideId;
  String? riderRideId;
  String? distance;
  bool? cancelByDriver;
  bool? cancelByRider;
  bool? confirmByRider;
  bool? confirmByDriver;
  MyRidesModelDataPostsInfoPickUpStatus? pickUpStatus;
  MyRidesModelDataPostsInfoDropOffStatus? dropOffStatus;
  bool? isCompleted;
  String? driverId;
  String? createdAt;
  String? updatedAt;
  List<MyRidesModelDataPostsInfoRiderPostsDetails?>? riderPostsDetails;

  MyRidesModelDataPostsInfo({
    this.Id,
    this.driverRideId,
    this.riderRideId,
    this.distance,
    this.cancelByDriver,
    this.cancelByRider,
    this.confirmByRider,
    this.confirmByDriver,
    this.pickUpStatus,
    this.dropOffStatus,
    this.isCompleted,
    this.driverId,
    this.createdAt,
    this.updatedAt,
    this.riderPostsDetails,
  });
  MyRidesModelDataPostsInfo.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverRideId = json['driverRideId']?.toString();
    riderRideId = json['riderRideId']?.toString();
    distance = json['distance']?.toString();
    cancelByDriver = json['cancelByDriver'];
    cancelByRider = json['cancelByRider'];
    confirmByRider = json['confirmByRider'];
    confirmByDriver = json['confirmByDriver'];
    pickUpStatus = (json['pickUpStatus'] != null)
        ? MyRidesModelDataPostsInfoPickUpStatus.fromJson(json['pickUpStatus'])
        : null;
    dropOffStatus = (json['dropOffStatus'] != null)
        ? MyRidesModelDataPostsInfoDropOffStatus.fromJson(json['dropOffStatus'])
        : null;
    isCompleted = json['isCompleted'];
    driverId = json['driverId']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    if (json['riderPostsDetails'] != null) {
      final v = json['riderPostsDetails'];
      final arr0 = <MyRidesModelDataPostsInfoRiderPostsDetails>[];
      v.forEach((v) {
        arr0.add(MyRidesModelDataPostsInfoRiderPostsDetails.fromJson(v));
      });
      riderPostsDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverRideId'] = driverRideId;
    data['riderRideId'] = riderRideId;
    data['distance'] = distance;
    data['cancelByDriver'] = cancelByDriver;
    data['cancelByRider'] = cancelByRider;
    data['confirmByRider'] = confirmByRider;
    data['confirmByDriver'] = confirmByDriver;
    if (pickUpStatus != null) {
      data['pickUpStatus'] = pickUpStatus!.toJson();
    }
    if (dropOffStatus != null) {
      data['dropOffStatus'] = dropOffStatus!.toJson();
    }
    data['isCompleted'] = isCompleted;
    data['driverId'] = driverId;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (riderPostsDetails != null) {
      final v = riderPostsDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['riderPostsDetails'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": false,
  "offers": false
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsNotificationPreferences.fromJson(
      Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsProfilePic {
/*
{
  "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
} 
*/

  String? key;
  String? url;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsProfilePic({
    this.key,
    this.url,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsProfilePic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsIdPic {
/*
{
  "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
} 
*/

  String? key;
  String? url;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsIdPic({
    this.key,
    this.url,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsIdPic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetails {
/*
{
  "_id": "65e03c7246e8a8aa4d62db6c",
  "fullName": "UserOne",
  "phone": "+11234512345",
  "email": "user@test.com",
  "city": "Mumbai",
  "dob": "2006-03-05",
  "gender": "Male",
  "isDriver": true,
  "referralCode": "Z8375Z0413",
  "profileStatus": true,
  "vehicleStatus": true,
  "status": "active",
  "wallet": 0,
  "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-02-29T08:12:34.805Z",
  "updatedAt": "2024-04-09T07:48:46.026Z",
  "idPic": {
    "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
  },
  "profilePic": {
    "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
  },
  "pinkMode": false,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": false,
    "offers": false
  }
} 
*/

  String? Id;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsIdPic?
      idPic;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsProfilePic?
      profilePic;
  bool? pinkMode;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsNotificationPreferences?
      notificationPreferences;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetails({
    this.Id,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.pinkMode,
    this.notificationPreferences,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsIdPic
            .fromJson(json['idPic'])
        : null;
    profilePic = (json['profilePic'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsProfilePic
            .fromJson(json['profilePic'])
        : null;
    pinkMode = json['pinkMode'];
    notificationPreferences = (json['notificationPreferences'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetailsNotificationPreferences
            .fromJson(json['notificationPreferences'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['pinkMode'] = pinkMode;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetailsVehiclePic {
/*
{
  "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
  "_id": "6603d738ba3fdc24d7cbce50"
} 
*/

  String? key;
  String? url;
  String? Id;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetailsVehiclePic({
    this.key,
    this.url,
    this.Id,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetailsVehiclePic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetails {
/*
{
  "_id": "65c23bef32f497dc57fdf002",
  "driverId": "65c228fd32f497dc57fdeff8",
  "vehiclePic": {
    "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
    "_id": "6603d738ba3fdc24d7cbce50"
  },
  "model": "ModelY",
  "type": "Convertible",
  "color": "Blue",
  "year": 2024,
  "licencePlate": "LA2024",
  "createdAt": "2024-02-06T14:02:23.061Z",
  "updatedAt": "2024-03-27T08:22:16.462Z"
} 
*/

  String? Id;
  String? driverId;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetailsVehiclePic?
      vehiclePic;
  String? model;
  String? type;
  String? color;
  int? year;
  String? licencePlate;
  String? createdAt;
  String? updatedAt;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetails({
    this.Id,
    this.driverId,
    this.vehiclePic,
    this.model,
    this.type,
    this.color,
    this.year,
    this.licencePlate,
    this.createdAt,
    this.updatedAt,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    vehiclePic = (json['vehiclePic'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetailsVehiclePic
            .fromJson(json['vehiclePic'])
        : null;
    model = json['model']?.toString();
    type = json['type']?.toString();
    color = json['color']?.toString();
    year = json['year']?.toInt();
    licencePlate = json['licencePlate']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (vehiclePic != null) {
      data['vehiclePic'] = vehiclePic!.toJson();
    }
    data['model'] = model;
    data['type'] = type;
    data['color'] = color;
    data['year'] = year;
    data['licencePlate'] = licencePlate;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsNotificationPreferences {
/*
{
  "trip": false,
  "alerts": false,
  "payments": false,
  "transactions": false,
  "offers": false
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsNotificationPreferences.fromJson(
      Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsProfilePic {
/*
{
  "key": "usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg"
} 
*/

  String? key;
  String? url;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsProfilePic({
    this.key,
    this.url,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsProfilePic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsIdPic {
/*
{
  "key": "idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg"
} 
*/

  String? key;
  String? url;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsIdPic({
    this.key,
    this.url,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsIdPic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetails {
/*
{
  "_id": "65c228fd32f497dc57fdeff8",
  "fullName": "Rohit Shah",
  "phone": "1111122222",
  "email": "rohit@test.com",
  "dob": "2006-02-27",
  "gender": "Male",
  "isDriver": true,
  "referralCode": "C3072B8509",
  "profileStatus": true,
  "vehicleStatus": true,
  "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-02-06T12:41:33.824Z",
  "updatedAt": "2024-03-26T06:38:55.990Z",
  "idPic": {
    "key": "idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg"
  },
  "profilePic": {
    "key": "usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg"
  },
  "status": "active",
  "city": "ÓÉR",
  "pinkMode": false,
  "notificationPreferences": {
    "trip": false,
    "alerts": false,
    "payments": false,
    "transactions": false,
    "offers": false
  },
  "rating": 0,
  "totalRides": 0,
  "vehicleDetails": [
    {
      "_id": "65c23bef32f497dc57fdf002",
      "driverId": "65c228fd32f497dc57fdeff8",
      "vehiclePic": {
        "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
        "_id": "6603d738ba3fdc24d7cbce50"
      },
      "model": "ModelY",
      "type": "Convertible",
      "color": "Blue",
      "year": 2024,
      "licencePlate": "LA2024",
      "createdAt": "2024-02-06T14:02:23.061Z",
      "updatedAt": "2024-03-27T08:22:16.462Z"
    }
  ]
} 
*/

  String? Id;
  String? fullName;
  String? phone;
  String? email;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsIdPic?
      idPic;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsProfilePic?
      profilePic;
  String? status;
  String? city;
  bool? pinkMode;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsNotificationPreferences?
      notificationPreferences;
  int? rating;
  int? totalRides;
  List<MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetails?>?
      vehicleDetails;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetails({
    this.Id,
    this.fullName,
    this.phone,
    this.email,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.status,
    this.city,
    this.pinkMode,
    this.notificationPreferences,
    this.rating,
    this.totalRides,
    this.vehicleDetails,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsIdPic
            .fromJson(json['idPic'])
        : null;
    profilePic = (json['profilePic'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsProfilePic
            .fromJson(json['profilePic'])
        : null;
    status = json['status']?.toString();
    city = json['city']?.toString();
    pinkMode = json['pinkMode'];
    notificationPreferences = (json['notificationPreferences'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsNotificationPreferences
            .fromJson(json['notificationPreferences'])
        : null;
    rating = json['rating']?.toInt();
    totalRides = json['totalRides']?.toInt();
    if (json['vehicleDetails'] != null) {
      final v = json['vehicleDetails'];
      final arr0 =
          <MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetails>[];
      v.forEach((v) {
        arr0.add(
            MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetailsVehicleDetails
                .fromJson(v));
      });
      vehicleDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['status'] = status;
    data['city'] = city;
    data['pinkMode'] = pinkMode;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    data['rating'] = rating;
    data['totalRides'] = totalRides;
    if (vehicleDetails != null) {
      final v = vehicleDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['vehicleDetails'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferencesOther {
/*
{
  "AppreciatesConversation": true,
  "EnjoysMusic": true,
  "SmokeFree": true,
  "PetFriendly": true,
  "WinterTires": false,
  "CoolingOrHeating": false,
  "BabySeat": false,
  "HeatedSeats": false
} 
*/

  bool? AppreciatesConversation;
  bool? EnjoysMusic;
  bool? SmokeFree;
  bool? PetFriendly;
  bool? WinterTires;
  bool? CoolingOrHeating;
  bool? BabySeat;
  bool? HeatedSeats;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferencesOther({
    this.AppreciatesConversation,
    this.EnjoysMusic,
    this.SmokeFree,
    this.PetFriendly,
    this.WinterTires,
    this.CoolingOrHeating,
    this.BabySeat,
    this.HeatedSeats,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferencesOther.fromJson(
      Map<String, dynamic> json) {
    AppreciatesConversation = json['AppreciatesConversation'];
    EnjoysMusic = json['EnjoysMusic'];
    SmokeFree = json['SmokeFree'];
    PetFriendly = json['PetFriendly'];
    WinterTires = json['WinterTires'];
    CoolingOrHeating = json['CoolingOrHeating'];
    BabySeat = json['BabySeat'];
    HeatedSeats = json['HeatedSeats'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AppreciatesConversation'] = AppreciatesConversation;
    data['EnjoysMusic'] = EnjoysMusic;
    data['SmokeFree'] = SmokeFree;
    data['PetFriendly'] = PetFriendly;
    data['WinterTires'] = WinterTires;
    data['CoolingOrHeating'] = CoolingOrHeating;
    data['BabySeat'] = BabySeat;
    data['HeatedSeats'] = HeatedSeats;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferences {
/*
{
  "luggageType": "L",
  "other": {
    "AppreciatesConversation": true,
    "EnjoysMusic": true,
    "SmokeFree": true,
    "PetFriendly": true,
    "WinterTires": false,
    "CoolingOrHeating": false,
    "BabySeat": false,
    "HeatedSeats": false
  }
} 
*/

  String? luggageType;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferencesOther? other;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferences({
    this.luggageType,
    this.other,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferences.fromJson(
      Map<String, dynamic> json) {
    luggageType = json['luggageType']?.toString();
    other = (json['other'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferencesOther
            .fromJson(json['other'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['luggageType'] = luggageType;
    if (other != null) {
      data['other'] = other!.toJson();
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsReturnTrip {
/*
{
  "returnTripId": "660f87b97c12cce019e781cf",
  "isReturnTrip": true,
  "returnDate": "2024-04-06T00:00:00.000Z",
  "returnTime": ""
} 
*/

  String? returnTripId;
  bool? isReturnTrip;
  String? returnDate;
  String? returnTime;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsReturnTrip({
    this.returnTripId,
    this.isReturnTrip,
    this.returnDate,
    this.returnTime,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsReturnTrip.fromJson(
      Map<String, dynamic> json) {
    returnTripId = json['returnTripId']?.toString();
    isReturnTrip = json['isReturnTrip'];
    returnDate = json['returnDate']?.toString();
    returnTime = json['returnTime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['returnTripId'] = returnTripId;
    data['isReturnTrip'] = isReturnTrip;
    data['returnDate'] = returnDate;
    data['returnTime'] = returnTime;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRecurringTrip {
/*
{
  "recurringTripDays": [
    1
  ],
  "recurringTripIds": [
    "123456"
  ]
} 
*/

  List<int?>? recurringTripDays;
  List<String?>? recurringTripIds;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRecurringTrip({
    this.recurringTripDays,
    this.recurringTripIds,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRecurringTrip.fromJson(
      Map<String, dynamic> json) {
    if (json['recurringTripDays'] != null) {
      final v = json['recurringTripDays'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      recurringTripDays = arr0;
    }
    if (json['recurringTripIds'] != null) {
      final v = json['recurringTripIds'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      recurringTripIds = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (recurringTripDays != null) {
      final v = recurringTripDays;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripDays'] = arr0;
    }
    if (recurringTripIds != null) {
      final v = recurringTripIds;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripIds'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsStops {
/*
{
  "name": "",
  "type": "Point",
  "coordinates": [
    0
  ],
  "originToStopFair": "",
  "stopToStopFair": "",
  "stopTodestinationFair": null,
  "_id": "660f87ba7c12cce019e781d4"
} 
*/

  String? name;
  String? type;
  List<int?>? coordinates;
  String? originToStopFair;
  String? stopToStopFair;
  String? stopTodestinationFair;
  String? Id;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsStops({
    this.name,
    this.type,
    this.coordinates,
    this.originToStopFair,
    this.stopToStopFair,
    this.stopTodestinationFair,
    this.Id,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsStops.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      coordinates = arr0;
    }
    originToStopFair = json['originToStopFair']?.toString();
    stopToStopFair = json['stopToStopFair']?.toString();
    stopTodestinationFair = json['stopTodestinationFair']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originToStopFair'] = originToStopFair;
    data['stopToStopFair'] = stopToStopFair;
    data['stopTodestinationFair'] = stopTodestinationFair;
    data['_id'] = Id;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDestination {
/*
{
  "name": "01, Bhopal",
  "type": "Point",
  "coordinates": [
    77.412615
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDestination.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsOrigin {
/*
{
  "name": "Unnamed Road, Jabalpur",
  "type": "Point",
  "coordinates": [
    79.9338798
  ],
  "originDestinationFair": "12.34"
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsOrigin.fromJson(
      Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDriverPostsDetails {
/*
{
  "_id": "660f87ba7c12cce019e781d3",
  "driverId": "65c228fd32f497dc57fdeff8",
  "origin": {
    "name": "Unnamed Road, Jabalpur",
    "type": "Point",
    "coordinates": [
      79.9338798
    ],
    "originDestinationFair": "12.34"
  },
  "destination": {
    "name": "01, Bhopal",
    "type": "Point",
    "coordinates": [
      77.412615
    ]
  },
  "stops": [
    {
      "name": "",
      "type": "Point",
      "coordinates": [
        0
      ],
      "originToStopFair": "",
      "stopToStopFair": "",
      "stopTodestinationFair": null,
      "_id": "660f87ba7c12cce019e781d4"
    }
  ],
  "tripType": "oneTime",
  "recurringTrip": {
    "recurringTripDays": [
      1
    ],
    "recurringTripIds": [
      "123456"
    ]
  },
  "date": "2024-04-05T00:00:00.000Z",
  "time": "",
  "returnTrip": {
    "returnTripId": "660f87b97c12cce019e781cf",
    "isReturnTrip": true,
    "returnDate": "2024-04-06T00:00:00.000Z",
    "returnTime": ""
  },
  "arrivalDate": null,
  "arrivalTime": null,
  "seatAvailable": 6,
  "preferences": {
    "luggageType": "L",
    "other": {
      "AppreciatesConversation": true,
      "EnjoysMusic": true,
      "SmokeFree": true,
      "PetFriendly": true,
      "WinterTires": false,
      "CoolingOrHeating": false,
      "BabySeat": false,
      "HeatedSeats": false
    }
  },
  "isStarted": true,
  "isCompleted": false,
  "isCancelled": false,
  "riders": [
    "65e03c7246e8a8aa4d62db6c"
  ],
  "drivers": [
    "123456"
  ],
  "description": "",
  "createdAt": "2024-04-05T05:10:18.123Z",
  "updatedAt": "2024-04-05T14:07:47.868Z",
  "driverDetails": [
    {
      "_id": "65c228fd32f497dc57fdeff8",
      "fullName": "Rohit Shah",
      "phone": "1111122222",
      "email": "rohit@test.com",
      "dob": "2006-02-27",
      "gender": "Male",
      "isDriver": true,
      "referralCode": "C3072B8509",
      "profileStatus": true,
      "vehicleStatus": true,
      "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-02-06T12:41:33.824Z",
      "updatedAt": "2024-03-26T06:38:55.990Z",
      "idPic": {
        "key": "idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg"
      },
      "profilePic": {
        "key": "usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg"
      },
      "status": "active",
      "city": "ÓÉR",
      "pinkMode": false,
      "notificationPreferences": {
        "trip": false,
        "alerts": false,
        "payments": false,
        "transactions": false,
        "offers": false
      },
      "rating": 0,
      "totalRides": 0,
      "vehicleDetails": [
        {
          "_id": "65c23bef32f497dc57fdf002",
          "driverId": "65c228fd32f497dc57fdeff8",
          "vehiclePic": {
            "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
            "_id": "6603d738ba3fdc24d7cbce50"
          },
          "model": "ModelY",
          "type": "Convertible",
          "color": "Blue",
          "year": 2024,
          "licencePlate": "LA2024",
          "createdAt": "2024-02-06T14:02:23.061Z",
          "updatedAt": "2024-03-27T08:22:16.462Z"
        }
      ]
    }
  ],
  "ridersDetails": [
    {
      "_id": "65e03c7246e8a8aa4d62db6c",
      "fullName": "UserOne",
      "phone": "+11234512345",
      "email": "user@test.com",
      "city": "Mumbai",
      "dob": "2006-03-05",
      "gender": "Male",
      "isDriver": true,
      "referralCode": "Z8375Z0413",
      "profileStatus": true,
      "vehicleStatus": true,
      "status": "active",
      "wallet": 0,
      "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-02-29T08:12:34.805Z",
      "updatedAt": "2024-04-09T07:48:46.026Z",
      "idPic": {
        "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
      },
      "profilePic": {
        "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
      },
      "pinkMode": false,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": false,
        "offers": false
      }
    }
  ]
} 
*/

  String? Id;
  String? driverId;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsOrigin? origin;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDestination?
      destination;
  List<MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsStops?>? stops;
  String? tripType;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRecurringTrip?
      recurringTrip;
  String? date;
  String? time;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsReturnTrip? returnTrip;
  String? arrivalDate;
  String? arrivalTime;
  int? seatAvailable;
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferences?
      preferences;
  bool? isStarted;
  bool? isCompleted;
  bool? isCancelled;
  List<String?>? riders;
  List<String?>? drivers;
  String? description;
  String? createdAt;
  String? updatedAt;
  List<MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetails?>?
      driverDetails;
  List<MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetails?>?
      ridersDetails;

  MyRidesModelDataConfirmDriverDetailsDriverPostsDetails({
    this.Id,
    this.driverId,
    this.origin,
    this.destination,
    this.stops,
    this.tripType,
    this.recurringTrip,
    this.date,
    this.time,
    this.returnTrip,
    this.arrivalDate,
    this.arrivalTime,
    this.seatAvailable,
    this.preferences,
    this.isStarted,
    this.isCompleted,
    this.isCancelled,
    this.riders,
    this.drivers,
    this.description,
    this.createdAt,
    this.updatedAt,
    this.driverDetails,
    this.ridersDetails,
  });
  MyRidesModelDataConfirmDriverDetailsDriverPostsDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    origin = (json['origin'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsOrigin.fromJson(
            json['origin'])
        : null;
    destination = (json['destination'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDestination
            .fromJson(json['destination'])
        : null;
    if (json['stops'] != null) {
      final v = json['stops'];
      final arr0 =
          <MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsStops>[];
      v.forEach((v) {
        arr0.add(MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsStops
            .fromJson(v));
      });
      stops = arr0;
    }
    tripType = json['tripType']?.toString();
    recurringTrip = (json['recurringTrip'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRecurringTrip
            .fromJson(json['recurringTrip'])
        : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    returnTrip = (json['returnTrip'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsReturnTrip
            .fromJson(json['returnTrip'])
        : null;
    arrivalDate = json['arrivalDate']?.toString();
    arrivalTime = json['arrivalTime']?.toString();
    seatAvailable = json['seatAvailable']?.toInt();
    preferences = (json['preferences'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsPreferences
            .fromJson(json['preferences'])
        : null;
    isStarted = json['isStarted'];
    isCompleted = json['isCompleted'];
    isCancelled = json['isCancelled'];
    if (json['riders'] != null) {
      final v = json['riders'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      riders = arr0;
    }
    if (json['drivers'] != null) {
      final v = json['drivers'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      drivers = arr0;
    }
    description = json['description']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    if (json['driverDetails'] != null) {
      final v = json['driverDetails'];
      final arr0 =
          <MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetails>[];
      v.forEach((v) {
        arr0.add(
            MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsDriverDetails
                .fromJson(v));
      });
      driverDetails = arr0;
    }
    if (json['ridersDetails'] != null) {
      final v = json['ridersDetails'];
      final arr0 =
          <MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetails>[];
      v.forEach((v) {
        arr0.add(
            MyRidesModelDataConfirmDriverDetailsDriverPostsDetailsRidersDetails
                .fromJson(v));
      });
      ridersDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    if (stops != null) {
      final v = stops;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['stops'] = arr0;
    }
    data['tripType'] = tripType;
    if (recurringTrip != null) {
      data['recurringTrip'] = recurringTrip!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (returnTrip != null) {
      data['returnTrip'] = returnTrip!.toJson();
    }
    data['arrivalDate'] = arrivalDate;
    data['arrivalTime'] = arrivalTime;
    data['seatAvailable'] = seatAvailable;
    if (preferences != null) {
      data['preferences'] = preferences!.toJson();
    }
    data['isStarted'] = isStarted;
    data['isCompleted'] = isCompleted;
    data['isCancelled'] = isCancelled;
    if (riders != null) {
      final v = riders;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['riders'] = arr0;
    }
    if (drivers != null) {
      final v = drivers;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['drivers'] = arr0;
    }
    data['description'] = description;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (driverDetails != null) {
      final v = driverDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['driverDetails'] = arr0;
    }
    if (ridersDetails != null) {
      final v = ridersDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['ridersDetails'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsDropOffStatus {
/*
{
  "isDropOff": false
} 
*/

  bool? isDropOff;

  MyRidesModelDataConfirmDriverDetailsDropOffStatus({
    this.isDropOff,
  });
  MyRidesModelDataConfirmDriverDetailsDropOffStatus.fromJson(
      Map<String, dynamic> json) {
    isDropOff = json['isDropOff'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isDropOff'] = isDropOff;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetailsPickUpStatus {
/*
{
  "isPickUp": false
} 
*/

  bool? isPickUp;

  MyRidesModelDataConfirmDriverDetailsPickUpStatus({
    this.isPickUp,
  });
  MyRidesModelDataConfirmDriverDetailsPickUpStatus.fromJson(
      Map<String, dynamic> json) {
    isPickUp = json['isPickUp'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isPickUp'] = isPickUp;
    return data;
  }
}

class MyRidesModelDataConfirmDriverDetails {
/*
{
  "_id": "660f8a127c12cce019e781f9",
  "driverRideId": "660f87ba7c12cce019e781d3",
  "riderRideId": "660f8a127c12cce019e781f7",
  "price": 9,
  "distance": "83.22384378424988",
  "cancelByDriver": false,
  "cancelByRider": false,
  "confirmByRider": true,
  "confirmByDriver": true,
  "pickUpStatus": {
    "isPickUp": false
  },
  "dropOffStatus": {
    "isDropOff": false
  },
  "isCompleted": false,
  "driverId": "65c228fd32f497dc57fdeff8",
  "createdAt": "2024-04-05T05:20:18.999Z",
  "updatedAt": "2024-04-09T06:55:06.505Z",
  "driverPostsDetails": [
    {
      "_id": "660f87ba7c12cce019e781d3",
      "driverId": "65c228fd32f497dc57fdeff8",
      "origin": {
        "name": "Unnamed Road, Jabalpur",
        "type": "Point",
        "coordinates": [
          79.9338798
        ],
        "originDestinationFair": "12.34"
      },
      "destination": {
        "name": "01, Bhopal",
        "type": "Point",
        "coordinates": [
          77.412615
        ]
      },
      "stops": [
        {
          "name": "",
          "type": "Point",
          "coordinates": [
            0
          ],
          "originToStopFair": "",
          "stopToStopFair": "",
          "stopTodestinationFair": null,
          "_id": "660f87ba7c12cce019e781d4"
        }
      ],
      "tripType": "oneTime",
      "recurringTrip": {
        "recurringTripDays": [
          1
        ],
        "recurringTripIds": [
          "123456"
        ]
      },
      "date": "2024-04-05T00:00:00.000Z",
      "time": "",
      "returnTrip": {
        "returnTripId": "660f87b97c12cce019e781cf",
        "isReturnTrip": true,
        "returnDate": "2024-04-06T00:00:00.000Z",
        "returnTime": ""
      },
      "arrivalDate": null,
      "arrivalTime": null,
      "seatAvailable": 6,
      "preferences": {
        "luggageType": "L",
        "other": {
          "AppreciatesConversation": true,
          "EnjoysMusic": true,
          "SmokeFree": true,
          "PetFriendly": true,
          "WinterTires": false,
          "CoolingOrHeating": false,
          "BabySeat": false,
          "HeatedSeats": false
        }
      },
      "isStarted": true,
      "isCompleted": false,
      "isCancelled": false,
      "riders": [
        "65e03c7246e8a8aa4d62db6c"
      ],
      "drivers": [
        "123456"
      ],
      "description": "",
      "createdAt": "2024-04-05T05:10:18.123Z",
      "updatedAt": "2024-04-05T14:07:47.868Z",
      "driverDetails": [
        {
          "_id": "65c228fd32f497dc57fdeff8",
          "fullName": "Rohit Shah",
          "phone": "1111122222",
          "email": "rohit@test.com",
          "dob": "2006-02-27",
          "gender": "Male",
          "isDriver": true,
          "referralCode": "C3072B8509",
          "profileStatus": true,
          "vehicleStatus": true,
          "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
          "firebaseSignInProvider": "phone",
          "createdAt": "2024-02-06T12:41:33.824Z",
          "updatedAt": "2024-03-26T06:38:55.990Z",
          "idPic": {
            "key": "idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg"
          },
          "profilePic": {
            "key": "usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg"
          },
          "status": "active",
          "city": "ÓÉR",
          "pinkMode": false,
          "notificationPreferences": {
            "trip": false,
            "alerts": false,
            "payments": false,
            "transactions": false,
            "offers": false
          },
          "rating": 0,
          "totalRides": 0,
          "vehicleDetails": [
            {
              "_id": "65c23bef32f497dc57fdf002",
              "driverId": "65c228fd32f497dc57fdeff8",
              "vehiclePic": {
                "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
                "_id": "6603d738ba3fdc24d7cbce50"
              },
              "model": "ModelY",
              "type": "Convertible",
              "color": "Blue",
              "year": 2024,
              "licencePlate": "LA2024",
              "createdAt": "2024-02-06T14:02:23.061Z",
              "updatedAt": "2024-03-27T08:22:16.462Z"
            }
          ]
        }
      ],
      "ridersDetails": [
        {
          "_id": "65e03c7246e8a8aa4d62db6c",
          "fullName": "UserOne",
          "phone": "+11234512345",
          "email": "user@test.com",
          "city": "Mumbai",
          "dob": "2006-03-05",
          "gender": "Male",
          "isDriver": true,
          "referralCode": "Z8375Z0413",
          "profileStatus": true,
          "vehicleStatus": true,
          "status": "active",
          "wallet": 0,
          "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
          "firebaseSignInProvider": "phone",
          "createdAt": "2024-02-29T08:12:34.805Z",
          "updatedAt": "2024-04-09T07:48:46.026Z",
          "idPic": {
            "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
          },
          "profilePic": {
            "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
          },
          "pinkMode": false,
          "notificationPreferences": {
            "trip": true,
            "alerts": true,
            "payments": true,
            "transactions": false,
            "offers": false
          }
        }
      ]
    }
  ]
} 
*/

  String? Id;
  String? driverRideId;
  String? riderRideId;
  int? price;
  String? distance;
  bool? cancelByDriver;
  bool? cancelByRider;
  bool? confirmByRider;
  bool? confirmByDriver;
  MyRidesModelDataConfirmDriverDetailsPickUpStatus? pickUpStatus;
  MyRidesModelDataConfirmDriverDetailsDropOffStatus? dropOffStatus;
  bool? isCompleted;
  String? driverId;
  String? createdAt;
  String? updatedAt;
  List<MyRidesModelDataConfirmDriverDetailsDriverPostsDetails?>?
      driverPostsDetails;

  MyRidesModelDataConfirmDriverDetails({
    this.Id,
    this.driverRideId,
    this.riderRideId,
    this.price,
    this.distance,
    this.cancelByDriver,
    this.cancelByRider,
    this.confirmByRider,
    this.confirmByDriver,
    this.pickUpStatus,
    this.dropOffStatus,
    this.isCompleted,
    this.driverId,
    this.createdAt,
    this.updatedAt,
    this.driverPostsDetails,
  });
  MyRidesModelDataConfirmDriverDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverRideId = json['driverRideId']?.toString();
    riderRideId = json['riderRideId']?.toString();
    price = json['price']?.toInt();
    distance = json['distance']?.toString();
    cancelByDriver = json['cancelByDriver'];
    cancelByRider = json['cancelByRider'];
    confirmByRider = json['confirmByRider'];
    confirmByDriver = json['confirmByDriver'];
    pickUpStatus = (json['pickUpStatus'] != null)
        ? MyRidesModelDataConfirmDriverDetailsPickUpStatus.fromJson(
            json['pickUpStatus'])
        : null;
    dropOffStatus = (json['dropOffStatus'] != null)
        ? MyRidesModelDataConfirmDriverDetailsDropOffStatus.fromJson(
            json['dropOffStatus'])
        : null;
    isCompleted = json['isCompleted'];
    driverId = json['driverId']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    if (json['driverPostsDetails'] != null) {
      final v = json['driverPostsDetails'];
      final arr0 = <MyRidesModelDataConfirmDriverDetailsDriverPostsDetails>[];
      v.forEach((v) {
        arr0.add(
            MyRidesModelDataConfirmDriverDetailsDriverPostsDetails.fromJson(v));
      });
      driverPostsDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverRideId'] = driverRideId;
    data['riderRideId'] = riderRideId;
    data['price'] = price;
    data['distance'] = distance;
    data['cancelByDriver'] = cancelByDriver;
    data['cancelByRider'] = cancelByRider;
    data['confirmByRider'] = confirmByRider;
    data['confirmByDriver'] = confirmByDriver;
    if (pickUpStatus != null) {
      data['pickUpStatus'] = pickUpStatus!.toJson();
    }
    if (dropOffStatus != null) {
      data['dropOffStatus'] = dropOffStatus!.toJson();
    }
    data['isCompleted'] = isCompleted;
    data['driverId'] = driverId;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (driverPostsDetails != null) {
      final v = driverPostsDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['driverPostsDetails'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataVehicleDetailsVehiclePic {
/*
{
  "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
  "_id": "6603d738ba3fdc24d7cbce50"
} 
*/

  String? key;
  String? url;
  String? Id;

  MyRidesModelDataVehicleDetailsVehiclePic({
    this.key,
    this.url,
    this.Id,
  });
  MyRidesModelDataVehicleDetailsVehiclePic.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    data['_id'] = Id;
    return data;
  }
}

class MyRidesModelDataVehicleDetails {
/*
{
  "_id": "65c23bef32f497dc57fdf002",
  "driverId": "65c228fd32f497dc57fdeff8",
  "vehiclePic": {
    "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
    "_id": "6603d738ba3fdc24d7cbce50"
  },
  "model": "ModelY",
  "type": "Convertible",
  "color": "Blue",
  "year": 2024,
  "licencePlate": "LA2024",
  "createdAt": "2024-02-06T14:02:23.061Z",
  "updatedAt": "2024-03-27T08:22:16.462Z"
} 
*/

  String? Id;
  String? driverId;
  MyRidesModelDataVehicleDetailsVehiclePic? vehiclePic;
  String? model;
  String? type;
  String? color;
  int? year;
  String? licencePlate;
  String? createdAt;
  String? updatedAt;

  MyRidesModelDataVehicleDetails({
    this.Id,
    this.driverId,
    this.vehiclePic,
    this.model,
    this.type,
    this.color,
    this.year,
    this.licencePlate,
    this.createdAt,
    this.updatedAt,
  });
  MyRidesModelDataVehicleDetails.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    vehiclePic = (json['vehiclePic'] != null)
        ? MyRidesModelDataVehicleDetailsVehiclePic.fromJson(json['vehiclePic'])
        : null;
    model = json['model']?.toString();
    type = json['type']?.toString();
    color = json['color']?.toString();
    year = json['year']?.toInt();
    licencePlate = json['licencePlate']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    if (vehiclePic != null) {
      data['vehiclePic'] = vehiclePic!.toJson();
    }
    data['model'] = model;
    data['type'] = type;
    data['color'] = color;
    data['year'] = year;
    data['licencePlate'] = licencePlate;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}

class MyRidesModelDataPreferencesOther {
/*
{
  "AppreciatesConversation": false,
  "EnjoysMusic": false,
  "SmokeFree": false,
  "PetFriendly": false,
  "WinterTires": false,
  "CoolingOrHeating": false,
  "BabySeat": false,
  "HeatedSeats": false
} 
*/

  bool? AppreciatesConversation;
  bool? EnjoysMusic;
  bool? SmokeFree;
  bool? PetFriendly;
  bool? WinterTires;
  bool? CoolingOrHeating;
  bool? BabySeat;
  bool? HeatedSeats;

  MyRidesModelDataPreferencesOther({
    this.AppreciatesConversation,
    this.EnjoysMusic,
    this.SmokeFree,
    this.PetFriendly,
    this.WinterTires,
    this.CoolingOrHeating,
    this.BabySeat,
    this.HeatedSeats,
  });
  MyRidesModelDataPreferencesOther.fromJson(Map<String, dynamic> json) {
    AppreciatesConversation = json['AppreciatesConversation'];
    EnjoysMusic = json['EnjoysMusic'];
    SmokeFree = json['SmokeFree'];
    PetFriendly = json['PetFriendly'];
    WinterTires = json['WinterTires'];
    CoolingOrHeating = json['CoolingOrHeating'];
    BabySeat = json['BabySeat'];
    HeatedSeats = json['HeatedSeats'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AppreciatesConversation'] = AppreciatesConversation;
    data['EnjoysMusic'] = EnjoysMusic;
    data['SmokeFree'] = SmokeFree;
    data['PetFriendly'] = PetFriendly;
    data['WinterTires'] = WinterTires;
    data['CoolingOrHeating'] = CoolingOrHeating;
    data['BabySeat'] = BabySeat;
    data['HeatedSeats'] = HeatedSeats;
    return data;
  }
}

class MyRidesModelDataPreferences {
/*
{
  "luggageType": "M",
  "other": {
    "AppreciatesConversation": false,
    "EnjoysMusic": false,
    "SmokeFree": false,
    "PetFriendly": false,
    "WinterTires": false,
    "CoolingOrHeating": false,
    "BabySeat": false,
    "HeatedSeats": false
  }
} 
*/

  String? luggageType;
  MyRidesModelDataPreferencesOther? other;

  MyRidesModelDataPreferences({
    this.luggageType,
    this.other,
  });
  MyRidesModelDataPreferences.fromJson(Map<String, dynamic> json) {
    luggageType = json['luggageType']?.toString();
    other = (json['other'] != null)
        ? MyRidesModelDataPreferencesOther.fromJson(json['other'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['luggageType'] = luggageType;
    if (other != null) {
      data['other'] = other!.toJson();
    }
    return data;
  }
}

class MyRidesModelDataReturnTrip {
/*
{
  "isReturnTrip": false,
  "returnDate": null,
  "returnTime": ""
} 
*/

  bool? isReturnTrip;
  String? returnDate;
  String? returnTime;

  MyRidesModelDataReturnTrip({
    this.isReturnTrip,
    this.returnDate,
    this.returnTime,
  });
  MyRidesModelDataReturnTrip.fromJson(Map<String, dynamic> json) {
    isReturnTrip = json['isReturnTrip'];
    returnDate = json['returnDate']?.toString();
    returnTime = json['returnTime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isReturnTrip'] = isReturnTrip;
    data['returnDate'] = returnDate;
    data['returnTime'] = returnTime;
    return data;
  }
}

class MyRidesModelDataRecurringTrip {
/*
{
  "recurringTripIds": [
    "123456"
  ],
  "recurringTripDays": [
    1
  ]
} 
*/

  List<String?>? recurringTripIds;
  List<int?>? recurringTripDays;

  MyRidesModelDataRecurringTrip({
    this.recurringTripIds,
    this.recurringTripDays,
  });
  MyRidesModelDataRecurringTrip.fromJson(Map<String, dynamic> json) {
    if (json['recurringTripIds'] != null) {
      final v = json['recurringTripIds'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      recurringTripIds = arr0;
    }
    if (json['recurringTripDays'] != null) {
      final v = json['recurringTripDays'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      recurringTripDays = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (recurringTripIds != null) {
      final v = recurringTripIds;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripIds'] = arr0;
    }
    if (recurringTripDays != null) {
      final v = recurringTripDays;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['recurringTripDays'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataStops {
/*
{
  "name": "",
  "type": "Point",
  "coordinates": [
    0
  ],
  "originToStopFair": "",
  "stopToStopFair": "",
  "stopTodestinationFair": null,
  "_id": "661e1936d6fbf5d15c417389"
} 
*/

  String? name;
  String? type;
  List<int?>? coordinates;
  String? originToStopFair;
  String? stopToStopFair;
  String? stopTodestinationFair;
  String? Id;

  MyRidesModelDataStops({
    this.name,
    this.type,
    this.coordinates,
    this.originToStopFair,
    this.stopToStopFair,
    this.stopTodestinationFair,
    this.Id,
  });
  MyRidesModelDataStops.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      coordinates = arr0;
    }
    originToStopFair = json['originToStopFair']?.toString();
    stopToStopFair = json['stopToStopFair']?.toString();
    stopTodestinationFair = json['stopTodestinationFair']?.toString();
    Id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originToStopFair'] = originToStopFair;
    data['stopToStopFair'] = stopToStopFair;
    data['stopTodestinationFair'] = stopTodestinationFair;
    data['_id'] = Id;
    return data;
  }
}

class MyRidesModelDataDestination {
/*
{
  "name": "3R7R+C5H, Mumbai",
  "type": "Point",
  "coordinates": [
    72.84047029999999
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  MyRidesModelDataDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  MyRidesModelDataDestination.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class MyRidesModelDataOrigin {
/*
{
  "name": "3XFX+Q4V, Navi Mumbai",
  "type": "Point",
  "coordinates": [
    72.99778409999999
  ],
  "originDestinationFair": "12.34"
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  MyRidesModelDataOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  MyRidesModelDataOrigin.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class MyRidesModelData {
/*
{
  "_id": "65f1963df4372ec0771125bc",
  "driverId": "65c228fd32f497dc57fdeff8",
  "riderId": "65c228fd32f497dc57fdeff8",
  "price": 9,
  "origin": {
    "name": "3XFX+Q4V, Navi Mumbai",
    "type": "Point",
    "coordinates": [
      72.99778409999999
    ],
    "originDestinationFair": "12.34"
  },
  "destination": {
    "name": "3R7R+C5H, Mumbai",
    "type": "Point",
    "coordinates": [
      72.84047029999999
    ]
  },
  "stops": [
    {
      "name": "",
      "type": "Point",
      "coordinates": [
        0
      ],
      "originToStopFair": "",
      "stopToStopFair": "",
      "stopTodestinationFair": null,
      "_id": "661e1936d6fbf5d15c417389"
    }
  ],
  "tripType": "oneTime",
  "recurringTrip": {
    "recurringTripIds": [
      "123456"
    ],
    "recurringTripDays": [
      1
    ]
  },
  "date": "2024-03-15T00:00:00.000Z",
  "time": "",
  "returnTrip": {
    "isReturnTrip": false,
    "returnDate": null,
    "returnTime": ""
  },
  "arrivalDate": null,
  "arrivalTime": null,
  "totalSeatAvailable": 3,
  "seatAvailable": 1,
  "preferences": {
    "luggageType": "M",
    "other": {
      "AppreciatesConversation": false,
      "EnjoysMusic": false,
      "SmokeFree": false,
      "PetFriendly": false,
      "WinterTires": false,
      "CoolingOrHeating": false,
      "BabySeat": false,
      "HeatedSeats": false
    }
  },
  "description": "ride from andheri to malad west.",
  "isStarted": true,
  "isCompleted": false,
  "isCancelled": false,
  "createdAt": "2024-03-13T12:04:13.746Z",
  "updatedAt": "2024-04-05T07:37:55.302Z",
  "vehicleDetails": [
    {
      "_id": "65c23bef32f497dc57fdf002",
      "driverId": "65c228fd32f497dc57fdeff8",
      "vehiclePic": {
        "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
        "_id": "6603d738ba3fdc24d7cbce50"
      },
      "model": "ModelY",
      "type": "Convertible",
      "color": "Blue",
      "year": 2024,
      "licencePlate": "LA2024",
      "createdAt": "2024-02-06T14:02:23.061Z",
      "updatedAt": "2024-03-27T08:22:16.462Z"
    }
  ],
  "confirmDriverDetails": [
    {
      "_id": "660f8a127c12cce019e781f9",
      "driverRideId": "660f87ba7c12cce019e781d3",
      "riderRideId": "660f8a127c12cce019e781f7",
      "price": 9,
      "distance": "83.22384378424988",
      "cancelByDriver": false,
      "cancelByRider": false,
      "confirmByRider": true,
      "confirmByDriver": true,
      "pickUpStatus": {
        "isPickUp": false
      },
      "dropOffStatus": {
        "isDropOff": false
      },
      "isCompleted": false,
      "driverId": "65c228fd32f497dc57fdeff8",
      "createdAt": "2024-04-05T05:20:18.999Z",
      "updatedAt": "2024-04-09T06:55:06.505Z",
      "driverPostsDetails": [
        {
          "_id": "660f87ba7c12cce019e781d3",
          "driverId": "65c228fd32f497dc57fdeff8",
          "origin": {
            "name": "Unnamed Road, Jabalpur",
            "type": "Point",
            "coordinates": [
              79.9338798
            ],
            "originDestinationFair": "12.34"
          },
          "destination": {
            "name": "01, Bhopal",
            "type": "Point",
            "coordinates": [
              77.412615
            ]
          },
          "stops": [
            {
              "name": "",
              "type": "Point",
              "coordinates": [
                0
              ],
              "originToStopFair": "",
              "stopToStopFair": "",
              "stopTodestinationFair": null,
              "_id": "660f87ba7c12cce019e781d4"
            }
          ],
          "tripType": "oneTime",
          "recurringTrip": {
            "recurringTripDays": [
              1
            ],
            "recurringTripIds": [
              "123456"
            ]
          },
          "date": "2024-04-05T00:00:00.000Z",
          "time": "",
          "returnTrip": {
            "returnTripId": "660f87b97c12cce019e781cf",
            "isReturnTrip": true,
            "returnDate": "2024-04-06T00:00:00.000Z",
            "returnTime": ""
          },
          "arrivalDate": null,
          "arrivalTime": null,
          "seatAvailable": 6,
          "preferences": {
            "luggageType": "L",
            "other": {
              "AppreciatesConversation": true,
              "EnjoysMusic": true,
              "SmokeFree": true,
              "PetFriendly": true,
              "WinterTires": false,
              "CoolingOrHeating": false,
              "BabySeat": false,
              "HeatedSeats": false
            }
          },
          "isStarted": true,
          "isCompleted": false,
          "isCancelled": false,
          "riders": [
            "65e03c7246e8a8aa4d62db6c"
          ],
          "drivers": [
            "123456"
          ],
          "description": "",
          "createdAt": "2024-04-05T05:10:18.123Z",
          "updatedAt": "2024-04-05T14:07:47.868Z",
          "driverDetails": [
            {
              "_id": "65c228fd32f497dc57fdeff8",
              "fullName": "Rohit Shah",
              "phone": "1111122222",
              "email": "rohit@test.com",
              "dob": "2006-02-27",
              "gender": "Male",
              "isDriver": true,
              "referralCode": "C3072B8509",
              "profileStatus": true,
              "vehicleStatus": true,
              "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
              "firebaseSignInProvider": "phone",
              "createdAt": "2024-02-06T12:41:33.824Z",
              "updatedAt": "2024-03-26T06:38:55.990Z",
              "idPic": {
                "key": "idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg"
              },
              "profilePic": {
                "key": "usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg"
              },
              "status": "active",
              "city": "ÓÉR",
              "pinkMode": false,
              "notificationPreferences": {
                "trip": false,
                "alerts": false,
                "payments": false,
                "transactions": false,
                "offers": false
              },
              "rating": 0,
              "totalRides": 0,
              "vehicleDetails": [
                {
                  "_id": "65c23bef32f497dc57fdf002",
                  "driverId": "65c228fd32f497dc57fdeff8",
                  "vehiclePic": {
                    "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
                    "_id": "6603d738ba3fdc24d7cbce50"
                  },
                  "model": "ModelY",
                  "type": "Convertible",
                  "color": "Blue",
                  "year": 2024,
                  "licencePlate": "LA2024",
                  "createdAt": "2024-02-06T14:02:23.061Z",
                  "updatedAt": "2024-03-27T08:22:16.462Z"
                }
              ]
            }
          ],
          "ridersDetails": [
            {
              "_id": "65e03c7246e8a8aa4d62db6c",
              "fullName": "UserOne",
              "phone": "+11234512345",
              "email": "user@test.com",
              "city": "Mumbai",
              "dob": "2006-03-05",
              "gender": "Male",
              "isDriver": true,
              "referralCode": "Z8375Z0413",
              "profileStatus": true,
              "vehicleStatus": true,
              "status": "active",
              "wallet": 0,
              "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
              "firebaseSignInProvider": "phone",
              "createdAt": "2024-02-29T08:12:34.805Z",
              "updatedAt": "2024-04-09T07:48:46.026Z",
              "idPic": {
                "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
              },
              "profilePic": {
                "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
              },
              "pinkMode": false,
              "notificationPreferences": {
                "trip": true,
                "alerts": true,
                "payments": true,
                "transactions": false,
                "offers": false
              }
            }
          ]
        }
      ]
    }
  ],
  "postsInfo": [
    {
      "_id": "65f1966cf4372ec0771125d1",
      "driverRideId": "65f1963df4372ec0771125bc",
      "riderRideId": "65e6c0a41d01b88a527df26e",
      "distance": "78",
      "cancelByDriver": false,
      "cancelByRider": false,
      "confirmByRider": true,
      "confirmByDriver": true,
      "pickUpStatus": {
        "isPickUp": false
      },
      "dropOffStatus": {
        "isDropOff": false
      },
      "isCompleted": false,
      "driverId": "65c228fd32f497dc57fdeff8",
      "createdAt": "2024-03-13T12:05:00.975Z",
      "updatedAt": "2024-03-13T12:05:15.414Z",
      "riderPostsDetails": [
        {
          "_id": "65e6c0a41d01b88a527df26e",
          "riderId": "65c2400c32f497dc57fdf007",
          "origin": {
            "name": "Latur,Latur,Aurangabad Division",
            "type": "Point",
            "coordinates": [
              76.5603828
            ]
          },
          "destination": {
            "name": "Nashik,Nashik,Nashik Division",
            "type": "Point",
            "coordinates": [
              73.78980229999999
            ]
          },
          "date": "2024-03-05T00:00:00.000Z",
          "time": "12:00 PM",
          "seatAvailable": 1,
          "createdAt": "2024-03-05T06:50:12.370Z",
          "updatedAt": "2024-03-05T06:50:12.370Z",
          "ridersDetails": [
            {
              "_id": "65c2400c32f497dc57fdf007",
              "fullName": "Rekha Dutta",
              "phone": "+11234567567",
              "email": "rekha@test.com",
              "dob": "1996-02-22",
              "gender": "Female",
              "isDriver": true,
              "referralCode": "V0280Q1170",
              "profileStatus": true,
              "vehicleStatus": true,
              "firebaseUid": "7ip7bk892LOYGNlleO2ebucHidB3",
              "firebaseSignInProvider": "phone",
              "createdAt": "2024-02-06T14:19:56.214Z",
              "updatedAt": "2024-03-21T10:10:14.482Z",
              "idPic": {
                "key": "idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile pic 1.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile%20pic%201.jpg"
              },
              "profilePic": {
                "key": "usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile pic 1.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile%20pic%201.jpg"
              },
              "status": "active",
              "city": "Jaipur",
              "rating": 0,
              "totalRides": 0
            }
          ]
        }
      ]
    }
  ],
  "rideStatus": "Confirmed"
} 
*/

  String? Id;
  String? driverId;
  String? riderId;
  int? price;
  MyRidesModelDataOrigin? origin;
  MyRidesModelDataDestination? destination;
  List<MyRidesModelDataStops?>? stops;
  String? tripType;
  MyRidesModelDataRecurringTrip? recurringTrip;
  String? date;
  String? time;
  MyRidesModelDataReturnTrip? returnTrip;
  String? arrivalDate;
  String? arrivalTime;
  int? totalSeatAvailable;
  int? seatAvailable;
  MyRidesModelDataPreferences? preferences;
  String? description;
  bool? isStarted;
  bool? isCompleted;
  bool? isCancelled;
  String? createdAt;
  String? updatedAt;
  List<MyRidesModelDataVehicleDetails?>? vehicleDetails;
  List<MyRidesModelDataConfirmDriverDetails?>? confirmDriverDetails;
  List<MyRidesModelDataPostsInfo?>? postsInfo;
  String? rideStatus;

  MyRidesModelData({
    this.Id,
    this.driverId,
    this.riderId,
    this.price,
    this.origin,
    this.destination,
    this.stops,
    this.tripType,
    this.recurringTrip,
    this.date,
    this.time,
    this.returnTrip,
    this.arrivalDate,
    this.arrivalTime,
    this.totalSeatAvailable,
    this.seatAvailable,
    this.preferences,
    this.description,
    this.isStarted,
    this.isCompleted,
    this.isCancelled,
    this.createdAt,
    this.updatedAt,
    this.vehicleDetails,
    this.confirmDriverDetails,
    this.postsInfo,
    this.rideStatus,
  });
  MyRidesModelData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    driverId = json['driverId']?.toString();
    riderId = json['riderId']?.toString();
    price = json['price']?.toInt();
    origin = (json['origin'] != null)
        ? MyRidesModelDataOrigin.fromJson(json['origin'])
        : null;
    destination = (json['destination'] != null)
        ? MyRidesModelDataDestination.fromJson(json['destination'])
        : null;
    if (json['stops'] != null) {
      final v = json['stops'];
      final arr0 = <MyRidesModelDataStops>[];
      v.forEach((v) {
        arr0.add(MyRidesModelDataStops.fromJson(v));
      });
      stops = arr0;
    }
    tripType = json['tripType']?.toString();
    recurringTrip = (json['recurringTrip'] != null)
        ? MyRidesModelDataRecurringTrip.fromJson(json['recurringTrip'])
        : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    returnTrip = (json['returnTrip'] != null)
        ? MyRidesModelDataReturnTrip.fromJson(json['returnTrip'])
        : null;
    arrivalDate = json['arrivalDate']?.toString();
    arrivalTime = json['arrivalTime']?.toString();
    totalSeatAvailable = json['totalSeatAvailable']?.toInt();
    seatAvailable = json['seatAvailable']?.toInt();
    preferences = (json['preferences'] != null)
        ? MyRidesModelDataPreferences.fromJson(json['preferences'])
        : null;
    description = json['description']?.toString();
    isStarted = json['isStarted'];
    isCompleted = json['isCompleted'];
    isCancelled = json['isCancelled'];
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    if (json['vehicleDetails'] != null) {
      final v = json['vehicleDetails'];
      final arr0 = <MyRidesModelDataVehicleDetails>[];
      v.forEach((v) {
        arr0.add(MyRidesModelDataVehicleDetails.fromJson(v));
      });
      vehicleDetails = arr0;
    }
    if (json['confirmDriverDetails'] != null) {
      final v = json['confirmDriverDetails'];
      final arr0 = <MyRidesModelDataConfirmDriverDetails>[];
      v.forEach((v) {
        arr0.add(MyRidesModelDataConfirmDriverDetails.fromJson(v));
      });
      confirmDriverDetails = arr0;
    }
    if (json['postsInfo'] != null) {
      final v = json['postsInfo'];
      final arr0 = <MyRidesModelDataPostsInfo>[];
      v.forEach((v) {
        arr0.add(MyRidesModelDataPostsInfo.fromJson(v));
      });
      postsInfo = arr0;
    }
    rideStatus = json['rideStatus']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['driverId'] = driverId;
    data['riderId'] = riderId;
    data['price'] = price;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    if (stops != null) {
      final v = stops;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['stops'] = arr0;
    }
    data['tripType'] = tripType;
    if (recurringTrip != null) {
      data['recurringTrip'] = recurringTrip!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (returnTrip != null) {
      data['returnTrip'] = returnTrip!.toJson();
    }
    data['arrivalDate'] = arrivalDate;
    data['arrivalTime'] = arrivalTime;
    data['totalSeatAvailable'] = totalSeatAvailable;
    data['seatAvailable'] = seatAvailable;
    if (preferences != null) {
      data['preferences'] = preferences!.toJson();
    }
    data['description'] = description;
    data['isStarted'] = isStarted;
    data['isCompleted'] = isCompleted;
    data['isCancelled'] = isCancelled;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (vehicleDetails != null) {
      final v = vehicleDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['vehicleDetails'] = arr0;
    }
    if (confirmDriverDetails != null) {
      final v = confirmDriverDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['confirmDriverDetails'] = arr0;
    }
    if (postsInfo != null) {
      final v = postsInfo;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['postsInfo'] = arr0;
    }
    data['rideStatus'] = rideStatus;
    return data;
  }
}

class MyRidesModel {
/*
{
  "status": true,
  "message": "success",
  "data": [
    {
      "_id": "65f1963df4372ec0771125bc",
      "driverId": "65c228fd32f497dc57fdeff8",
      "riderId": "65c228fd32f497dc57fdeff8",
      "price": 9,
      "origin": {
        "name": "3XFX+Q4V, Navi Mumbai",
        "type": "Point",
        "coordinates": [
          72.99778409999999
        ],
        "originDestinationFair": "12.34"
      },
      "destination": {
        "name": "3R7R+C5H, Mumbai",
        "type": "Point",
        "coordinates": [
          72.84047029999999
        ]
      },
      "stops": [
        {
          "name": "",
          "type": "Point",
          "coordinates": [
            0
          ],
          "originToStopFair": "",
          "stopToStopFair": "",
          "stopTodestinationFair": null,
          "_id": "661e1936d6fbf5d15c417389"
        }
      ],
      "tripType": "oneTime",
      "recurringTrip": {
        "recurringTripIds": [
          "123456"
        ],
        "recurringTripDays": [
          1
        ]
      },
      "date": "2024-03-15T00:00:00.000Z",
      "time": "",
      "returnTrip": {
        "isReturnTrip": false,
        "returnDate": null,
        "returnTime": ""
      },
      "arrivalDate": null,
      "arrivalTime": null,
      "totalSeatAvailable": 3,
      "seatAvailable": 1,
      "preferences": {
        "luggageType": "M",
        "other": {
          "AppreciatesConversation": false,
          "EnjoysMusic": false,
          "SmokeFree": false,
          "PetFriendly": false,
          "WinterTires": false,
          "CoolingOrHeating": false,
          "BabySeat": false,
          "HeatedSeats": false
        }
      },
      "description": "ride from andheri to malad west.",
      "isStarted": true,
      "isCompleted": false,
      "isCancelled": false,
      "createdAt": "2024-03-13T12:04:13.746Z",
      "updatedAt": "2024-04-05T07:37:55.302Z",
      "vehicleDetails": [
        {
          "_id": "65c23bef32f497dc57fdf002",
          "driverId": "65c228fd32f497dc57fdeff8",
          "vehiclePic": {
            "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
            "_id": "6603d738ba3fdc24d7cbce50"
          },
          "model": "ModelY",
          "type": "Convertible",
          "color": "Blue",
          "year": 2024,
          "licencePlate": "LA2024",
          "createdAt": "2024-02-06T14:02:23.061Z",
          "updatedAt": "2024-03-27T08:22:16.462Z"
        }
      ],
      "confirmDriverDetails": [
        {
          "_id": "660f8a127c12cce019e781f9",
          "driverRideId": "660f87ba7c12cce019e781d3",
          "riderRideId": "660f8a127c12cce019e781f7",
          "price": 9,
          "distance": "83.22384378424988",
          "cancelByDriver": false,
          "cancelByRider": false,
          "confirmByRider": true,
          "confirmByDriver": true,
          "pickUpStatus": {
            "isPickUp": false
          },
          "dropOffStatus": {
            "isDropOff": false
          },
          "isCompleted": false,
          "driverId": "65c228fd32f497dc57fdeff8",
          "createdAt": "2024-04-05T05:20:18.999Z",
          "updatedAt": "2024-04-09T06:55:06.505Z",
          "driverPostsDetails": [
            {
              "_id": "660f87ba7c12cce019e781d3",
              "driverId": "65c228fd32f497dc57fdeff8",
              "origin": {
                "name": "Unnamed Road, Jabalpur",
                "type": "Point",
                "coordinates": [
                  79.9338798
                ],
                "originDestinationFair": "12.34"
              },
              "destination": {
                "name": "01, Bhopal",
                "type": "Point",
                "coordinates": [
                  77.412615
                ]
              },
              "stops": [
                {
                  "name": "",
                  "type": "Point",
                  "coordinates": [
                    0
                  ],
                  "originToStopFair": "",
                  "stopToStopFair": "",
                  "stopTodestinationFair": null,
                  "_id": "660f87ba7c12cce019e781d4"
                }
              ],
              "tripType": "oneTime",
              "recurringTrip": {
                "recurringTripDays": [
                  1
                ],
                "recurringTripIds": [
                  "123456"
                ]
              },
              "date": "2024-04-05T00:00:00.000Z",
              "time": "",
              "returnTrip": {
                "returnTripId": "660f87b97c12cce019e781cf",
                "isReturnTrip": true,
                "returnDate": "2024-04-06T00:00:00.000Z",
                "returnTime": ""
              },
              "arrivalDate": null,
              "arrivalTime": null,
              "seatAvailable": 6,
              "preferences": {
                "luggageType": "L",
                "other": {
                  "AppreciatesConversation": true,
                  "EnjoysMusic": true,
                  "SmokeFree": true,
                  "PetFriendly": true,
                  "WinterTires": false,
                  "CoolingOrHeating": false,
                  "BabySeat": false,
                  "HeatedSeats": false
                }
              },
              "isStarted": true,
              "isCompleted": false,
              "isCancelled": false,
              "riders": [
                "65e03c7246e8a8aa4d62db6c"
              ],
              "drivers": [
                "123456"
              ],
              "description": "",
              "createdAt": "2024-04-05T05:10:18.123Z",
              "updatedAt": "2024-04-05T14:07:47.868Z",
              "driverDetails": [
                {
                  "_id": "65c228fd32f497dc57fdeff8",
                  "fullName": "Rohit Shah",
                  "phone": "1111122222",
                  "email": "rohit@test.com",
                  "dob": "2006-02-27",
                  "gender": "Male",
                  "isDriver": true,
                  "referralCode": "C3072B8509",
                  "profileStatus": true,
                  "vehicleStatus": true,
                  "firebaseUid": "foYFX1qnSaPETdXnF1IFVT0xpkZ2",
                  "firebaseSignInProvider": "phone",
                  "createdAt": "2024-02-06T12:41:33.824Z",
                  "updatedAt": "2024-03-26T06:38:55.990Z",
                  "idPic": {
                    "key": "idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/ef81cc68-8f59-4603-8892-430f2c8774b7-1000000035.jpg"
                  },
                  "profilePic": {
                    "key": "usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/c8374dde-a606-4595-90f9-4327ac10c1ff-1000000035.jpg"
                  },
                  "status": "active",
                  "city": "ÓÉR",
                  "pinkMode": false,
                  "notificationPreferences": {
                    "trip": false,
                    "alerts": false,
                    "payments": false,
                    "transactions": false,
                    "offers": false
                  },
                  "rating": 0,
                  "totalRides": 0,
                  "vehicleDetails": [
                    {
                      "_id": "65c23bef32f497dc57fdf002",
                      "driverId": "65c228fd32f497dc57fdeff8",
                      "vehiclePic": {
                        "key": "vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
                        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/vehiclePic/b9fae2cc-33ed-4b5c-b602-c075fa476e3f-1000000038.jpg",
                        "_id": "6603d738ba3fdc24d7cbce50"
                      },
                      "model": "ModelY",
                      "type": "Convertible",
                      "color": "Blue",
                      "year": 2024,
                      "licencePlate": "LA2024",
                      "createdAt": "2024-02-06T14:02:23.061Z",
                      "updatedAt": "2024-03-27T08:22:16.462Z"
                    }
                  ]
                }
              ],
              "ridersDetails": [
                {
                  "_id": "65e03c7246e8a8aa4d62db6c",
                  "fullName": "UserOne",
                  "phone": "+11234512345",
                  "email": "user@test.com",
                  "city": "Mumbai",
                  "dob": "2006-03-05",
                  "gender": "Male",
                  "isDriver": true,
                  "referralCode": "Z8375Z0413",
                  "profileStatus": true,
                  "vehicleStatus": true,
                  "status": "active",
                  "wallet": 0,
                  "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
                  "firebaseSignInProvider": "phone",
                  "createdAt": "2024-02-29T08:12:34.805Z",
                  "updatedAt": "2024-04-09T07:48:46.026Z",
                  "idPic": {
                    "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
                  },
                  "profilePic": {
                    "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
                  },
                  "pinkMode": false,
                  "notificationPreferences": {
                    "trip": true,
                    "alerts": true,
                    "payments": true,
                    "transactions": false,
                    "offers": false
                  }
                }
              ]
            }
          ]
        }
      ],
      "postsInfo": [
        {
          "_id": "65f1966cf4372ec0771125d1",
          "driverRideId": "65f1963df4372ec0771125bc",
          "riderRideId": "65e6c0a41d01b88a527df26e",
          "distance": "78",
          "cancelByDriver": false,
          "cancelByRider": false,
          "confirmByRider": true,
          "confirmByDriver": true,
          "pickUpStatus": {
            "isPickUp": false
          },
          "dropOffStatus": {
            "isDropOff": false
          },
          "isCompleted": false,
          "driverId": "65c228fd32f497dc57fdeff8",
          "createdAt": "2024-03-13T12:05:00.975Z",
          "updatedAt": "2024-03-13T12:05:15.414Z",
          "riderPostsDetails": [
            {
              "_id": "65e6c0a41d01b88a527df26e",
              "riderId": "65c2400c32f497dc57fdf007",
              "origin": {
                "name": "Latur,Latur,Aurangabad Division",
                "type": "Point",
                "coordinates": [
                  76.5603828
                ]
              },
              "destination": {
                "name": "Nashik,Nashik,Nashik Division",
                "type": "Point",
                "coordinates": [
                  73.78980229999999
                ]
              },
              "date": "2024-03-05T00:00:00.000Z",
              "time": "12:00 PM",
              "seatAvailable": 1,
              "createdAt": "2024-03-05T06:50:12.370Z",
              "updatedAt": "2024-03-05T06:50:12.370Z",
              "ridersDetails": [
                {
                  "_id": "65c2400c32f497dc57fdf007",
                  "fullName": "Rekha Dutta",
                  "phone": "+11234567567",
                  "email": "rekha@test.com",
                  "dob": "1996-02-22",
                  "gender": "Female",
                  "isDriver": true,
                  "referralCode": "V0280Q1170",
                  "profileStatus": true,
                  "vehicleStatus": true,
                  "firebaseUid": "7ip7bk892LOYGNlleO2ebucHidB3",
                  "firebaseSignInProvider": "phone",
                  "createdAt": "2024-02-06T14:19:56.214Z",
                  "updatedAt": "2024-03-21T10:10:14.482Z",
                  "idPic": {
                    "key": "idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile pic 1.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/15a822bf-c6ef-42bd-86e4-afa99098c640-profile%20pic%201.jpg"
                  },
                  "profilePic": {
                    "key": "usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile pic 1.jpg",
                    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/cf6fb022-721c-4cc0-a182-acdfc3074ae0-profile%20pic%201.jpg"
                  },
                  "status": "active",
                  "city": "Jaipur",
                  "rating": 0,
                  "totalRides": 0
                }
              ]
            }
          ]
        }
      ],
      "rideStatus": "Confirmed"
    }
  ]
} 
*/

  bool? status;
  String? message;
  List<MyRidesModelData>? data;

  MyRidesModel({
    this.status,
    this.message,
    this.data,
  });
  MyRidesModel.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    message = json['message']?.toString();
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <MyRidesModelData>[];
      v.forEach((v) {
        arr0.add(MyRidesModelData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}
