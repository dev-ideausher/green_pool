///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RecurringRidesModelDataRidesDetailsRidersDetailsNotificationPreferences {
/*
{
  "trip": true,
  "alerts": true,
  "payments": true,
  "transactions": false,
  "offers": false
} 
*/

  bool? trip;
  bool? alerts;
  bool? payments;
  bool? transactions;
  bool? offers;

  RecurringRidesModelDataRidesDetailsRidersDetailsNotificationPreferences({
    this.trip,
    this.alerts,
    this.payments,
    this.transactions,
    this.offers,
  });
  RecurringRidesModelDataRidesDetailsRidersDetailsNotificationPreferences.fromJson(
      Map<String, dynamic> json) {
    trip = json['trip'];
    alerts = json['alerts'];
    payments = json['payments'];
    transactions = json['transactions'];
    offers = json['offers'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['trip'] = trip;
    data['alerts'] = alerts;
    data['payments'] = payments;
    data['transactions'] = transactions;
    data['offers'] = offers;
    return data;
  }
}

class RecurringRidesModelDataRidesDetailsRidersDetailsProfilePic {
/*
{
  "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
} 
*/

  String? key;
  String? url;

  RecurringRidesModelDataRidesDetailsRidersDetailsProfilePic({
    this.key,
    this.url,
  });
  RecurringRidesModelDataRidesDetailsRidersDetailsProfilePic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class RecurringRidesModelDataRidesDetailsRidersDetailsIdPic {
/*
{
  "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
  "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
} 
*/

  String? key;
  String? url;

  RecurringRidesModelDataRidesDetailsRidersDetailsIdPic({
    this.key,
    this.url,
  });
  RecurringRidesModelDataRidesDetailsRidersDetailsIdPic.fromJson(
      Map<String, dynamic> json) {
    key = json['key']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['url'] = url;
    return data;
  }
}

class RecurringRidesModelDataRidesDetailsRidersDetails {
/*
{
  "_id": "65e03c7246e8a8aa4d62db6c",
  "fullName": "UserOne",
  "phone": "+11234512345",
  "email": "user@test.com",
  "city": "Mumbai",
  "dob": "2006-03-05",
  "gender": "Male",
  "isDriver": true,
  "referralCode": "Z8375Z0413",
  "profileStatus": true,
  "vehicleStatus": true,
  "status": "active",
  "wallet": 0,
  "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
  "firebaseSignInProvider": "phone",
  "createdAt": "2024-02-29T08:12:34.805Z",
  "updatedAt": "2024-04-09T07:48:46.026Z",
  "idPic": {
    "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
  },
  "profilePic": {
    "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
    "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
  },
  "pinkMode": false,
  "notificationPreferences": {
    "trip": true,
    "alerts": true,
    "payments": true,
    "transactions": false,
    "offers": false
  }
} 
*/

  String? Id;
  String? fullName;
  String? phone;
  String? email;
  String? city;
  String? dob;
  String? gender;
  bool? isDriver;
  String? referralCode;
  bool? profileStatus;
  bool? vehicleStatus;
  String? status;
  int? wallet;
  String? firebaseUid;
  String? firebaseSignInProvider;
  String? createdAt;
  String? updatedAt;
  RecurringRidesModelDataRidesDetailsRidersDetailsIdPic? idPic;
  RecurringRidesModelDataRidesDetailsRidersDetailsProfilePic? profilePic;
  bool? pinkMode;
  RecurringRidesModelDataRidesDetailsRidersDetailsNotificationPreferences?
      notificationPreferences;

  RecurringRidesModelDataRidesDetailsRidersDetails({
    this.Id,
    this.fullName,
    this.phone,
    this.email,
    this.city,
    this.dob,
    this.gender,
    this.isDriver,
    this.referralCode,
    this.profileStatus,
    this.vehicleStatus,
    this.status,
    this.wallet,
    this.firebaseUid,
    this.firebaseSignInProvider,
    this.createdAt,
    this.updatedAt,
    this.idPic,
    this.profilePic,
    this.pinkMode,
    this.notificationPreferences,
  });
  RecurringRidesModelDataRidesDetailsRidersDetails.fromJson(
      Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    fullName = json['fullName']?.toString();
    phone = json['phone']?.toString();
    email = json['email']?.toString();
    city = json['city']?.toString();
    dob = json['dob']?.toString();
    gender = json['gender']?.toString();
    isDriver = json['isDriver'];
    referralCode = json['referralCode']?.toString();
    profileStatus = json['profileStatus'];
    vehicleStatus = json['vehicleStatus'];
    status = json['status']?.toString();
    wallet = json['wallet']?.toInt();
    firebaseUid = json['firebaseUid']?.toString();
    firebaseSignInProvider = json['firebaseSignInProvider']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    idPic = (json['idPic'] != null)
        ? RecurringRidesModelDataRidesDetailsRidersDetailsIdPic.fromJson(
            json['idPic'])
        : null;
    profilePic = (json['profilePic'] != null)
        ? RecurringRidesModelDataRidesDetailsRidersDetailsProfilePic.fromJson(
            json['profilePic'])
        : null;
    pinkMode = json['pinkMode'];
    notificationPreferences = (json['notificationPreferences'] != null)
        ? RecurringRidesModelDataRidesDetailsRidersDetailsNotificationPreferences
            .fromJson(json['notificationPreferences'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['fullName'] = fullName;
    data['phone'] = phone;
    data['email'] = email;
    data['city'] = city;
    data['dob'] = dob;
    data['gender'] = gender;
    data['isDriver'] = isDriver;
    data['referralCode'] = referralCode;
    data['profileStatus'] = profileStatus;
    data['vehicleStatus'] = vehicleStatus;
    data['status'] = status;
    data['wallet'] = wallet;
    data['firebaseUid'] = firebaseUid;
    data['firebaseSignInProvider'] = firebaseSignInProvider;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    if (idPic != null) {
      data['idPic'] = idPic!.toJson();
    }
    if (profilePic != null) {
      data['profilePic'] = profilePic!.toJson();
    }
    data['pinkMode'] = pinkMode;
    if (notificationPreferences != null) {
      data['notificationPreferences'] = notificationPreferences!.toJson();
    }
    return data;
  }
}

class RecurringRidesModelDataRidesDetails {
/*
{
  "date": "2024-04-22T00:00:00.000Z",
  "dayOfWeek": 2,
  "day": "Monday",
  "ridersDetails": [
    {
      "_id": "65e03c7246e8a8aa4d62db6c",
      "fullName": "UserOne",
      "phone": "+11234512345",
      "email": "user@test.com",
      "city": "Mumbai",
      "dob": "2006-03-05",
      "gender": "Male",
      "isDriver": true,
      "referralCode": "Z8375Z0413",
      "profileStatus": true,
      "vehicleStatus": true,
      "status": "active",
      "wallet": 0,
      "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
      "firebaseSignInProvider": "phone",
      "createdAt": "2024-02-29T08:12:34.805Z",
      "updatedAt": "2024-04-09T07:48:46.026Z",
      "idPic": {
        "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
      },
      "profilePic": {
        "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
        "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
      },
      "pinkMode": false,
      "notificationPreferences": {
        "trip": true,
        "alerts": true,
        "payments": true,
        "transactions": false,
        "offers": false
      }
    }
  ]
} 
*/

  String? date;
  int? dayOfWeek;
  String? day;
  List<RecurringRidesModelDataRidesDetailsRidersDetails?>? ridersDetails;

  RecurringRidesModelDataRidesDetails({
    this.date,
    this.dayOfWeek,
    this.day,
    this.ridersDetails,
  });
  RecurringRidesModelDataRidesDetails.fromJson(Map<String, dynamic> json) {
    date = json['date']?.toString();
    dayOfWeek = json['dayOfWeek']?.toInt();
    day = json['day']?.toString();
    if (json['ridersDetails'] != null) {
      final v = json['ridersDetails'];
      final arr0 = <RecurringRidesModelDataRidesDetailsRidersDetails>[];
      v.forEach((v) {
        arr0.add(RecurringRidesModelDataRidesDetailsRidersDetails.fromJson(v));
      });
      ridersDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['date'] = date;
    data['dayOfWeek'] = dayOfWeek;
    data['day'] = day;
    if (ridersDetails != null) {
      final v = ridersDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['ridersDetails'] = arr0;
    }
    return data;
  }
}

class RecurringRidesModelDataPreferencesOther {
/*
{
  "AppreciatesConversation": true,
  "EnjoysMusic": true,
  "SmokeFree": true,
  "PetFriendly": true,
  "WinterTires": false,
  "CoolingOrHeating": false,
  "BabySeat": false,
  "HeatedSeats": false
} 
*/

  bool? AppreciatesConversation;
  bool? EnjoysMusic;
  bool? SmokeFree;
  bool? PetFriendly;
  bool? WinterTires;
  bool? CoolingOrHeating;
  bool? BabySeat;
  bool? HeatedSeats;

  RecurringRidesModelDataPreferencesOther({
    this.AppreciatesConversation,
    this.EnjoysMusic,
    this.SmokeFree,
    this.PetFriendly,
    this.WinterTires,
    this.CoolingOrHeating,
    this.BabySeat,
    this.HeatedSeats,
  });
  RecurringRidesModelDataPreferencesOther.fromJson(Map<String, dynamic> json) {
    AppreciatesConversation = json['AppreciatesConversation'];
    EnjoysMusic = json['EnjoysMusic'];
    SmokeFree = json['SmokeFree'];
    PetFriendly = json['PetFriendly'];
    WinterTires = json['WinterTires'];
    CoolingOrHeating = json['CoolingOrHeating'];
    BabySeat = json['BabySeat'];
    HeatedSeats = json['HeatedSeats'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['AppreciatesConversation'] = AppreciatesConversation;
    data['EnjoysMusic'] = EnjoysMusic;
    data['SmokeFree'] = SmokeFree;
    data['PetFriendly'] = PetFriendly;
    data['WinterTires'] = WinterTires;
    data['CoolingOrHeating'] = CoolingOrHeating;
    data['BabySeat'] = BabySeat;
    data['HeatedSeats'] = HeatedSeats;
    return data;
  }
}

class RecurringRidesModelDataPreferences {
/*
{
  "luggageType": "S",
  "other": {
    "AppreciatesConversation": true,
    "EnjoysMusic": true,
    "SmokeFree": true,
    "PetFriendly": true,
    "WinterTires": false,
    "CoolingOrHeating": false,
    "BabySeat": false,
    "HeatedSeats": false
  }
} 
*/

  String? luggageType;
  RecurringRidesModelDataPreferencesOther? other;

  RecurringRidesModelDataPreferences({
    this.luggageType,
    this.other,
  });
  RecurringRidesModelDataPreferences.fromJson(Map<String, dynamic> json) {
    luggageType = json['luggageType']?.toString();
    other = (json['other'] != null)
        ? RecurringRidesModelDataPreferencesOther.fromJson(json['other'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['luggageType'] = luggageType;
    if (other != null) {
      data['other'] = other!.toJson();
    }
    return data;
  }
}

class RecurringRidesModelDataRecurringTrip {
/*
{
  "isRecurringTripEnabled": false
} 
*/

  bool? isRecurringTripEnabled;

  RecurringRidesModelDataRecurringTrip({
    this.isRecurringTripEnabled,
  });
  RecurringRidesModelDataRecurringTrip.fromJson(Map<String, dynamic> json) {
    isRecurringTripEnabled = json['isRecurringTripEnabled'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['isRecurringTripEnabled'] = isRecurringTripEnabled;
    return data;
  }
}

class RecurringRidesModelDataDestination {
/*
{
  "name": "3R7R+C5H, Mumbai",
  "type": "Point",
  "coordinates": [
    72.84047029999999
  ]
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;

  RecurringRidesModelDataDestination({
    this.name,
    this.type,
    this.coordinates,
  });
  RecurringRidesModelDataDestination.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    return data;
  }
}

class RecurringRidesModelDataOrigin {
/*
{
  "name": "3XFX+Q4V, Navi Mumbai",
  "type": "Point",
  "coordinates": [
    72.99778409999999
  ],
  "originDestinationFair": "12.34"
} 
*/

  String? name;
  String? type;
  List<double?>? coordinates;
  String? originDestinationFair;

  RecurringRidesModelDataOrigin({
    this.name,
    this.type,
    this.coordinates,
    this.originDestinationFair,
  });
  RecurringRidesModelDataOrigin.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    type = json['type']?.toString();
    if (json['coordinates'] != null) {
      final v = json['coordinates'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add(v.toDouble());
      });
      coordinates = arr0;
    }
    originDestinationFair = json['originDestinationFair']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['type'] = type;
    if (coordinates != null) {
      final v = coordinates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['coordinates'] = arr0;
    }
    data['originDestinationFair'] = originDestinationFair;
    return data;
  }
}

class RecurringRidesModelData {
/*
{
  "_id": "661e1936d6fbf5d15c417388",
  "origin": {
    "name": "3XFX+Q4V, Navi Mumbai",
    "type": "Point",
    "coordinates": [
      72.99778409999999
    ],
    "originDestinationFair": "12.34"
  },
  "destination": {
    "name": "3R7R+C5H, Mumbai",
    "type": "Point",
    "coordinates": [
      72.84047029999999
    ]
  },
  "recurringTrip": {
    "isRecurringTripEnabled": false
  },
  "date": null,
  "time": "",
  "preferences": {
    "luggageType": "S",
    "other": {
      "AppreciatesConversation": true,
      "EnjoysMusic": true,
      "SmokeFree": true,
      "PetFriendly": true,
      "WinterTires": false,
      "CoolingOrHeating": false,
      "BabySeat": false,
      "HeatedSeats": false
    }
  },
  "description": "",
  "ridesDetails": [
    {
      "date": "2024-04-22T00:00:00.000Z",
      "dayOfWeek": 2,
      "day": "Monday",
      "ridersDetails": [
        {
          "_id": "65e03c7246e8a8aa4d62db6c",
          "fullName": "UserOne",
          "phone": "+11234512345",
          "email": "user@test.com",
          "city": "Mumbai",
          "dob": "2006-03-05",
          "gender": "Male",
          "isDriver": true,
          "referralCode": "Z8375Z0413",
          "profileStatus": true,
          "vehicleStatus": true,
          "status": "active",
          "wallet": 0,
          "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
          "firebaseSignInProvider": "phone",
          "createdAt": "2024-02-29T08:12:34.805Z",
          "updatedAt": "2024-04-09T07:48:46.026Z",
          "idPic": {
            "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
          },
          "profilePic": {
            "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
            "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
          },
          "pinkMode": false,
          "notificationPreferences": {
            "trip": true,
            "alerts": true,
            "payments": true,
            "transactions": false,
            "offers": false
          }
        }
      ]
    }
  ]
} 
*/

  String? Id;
  RecurringRidesModelDataOrigin? origin;
  RecurringRidesModelDataDestination? destination;
  RecurringRidesModelDataRecurringTrip? recurringTrip;
  String? date;
  String? time;
  RecurringRidesModelDataPreferences? preferences;
  String? description;
  List<RecurringRidesModelDataRidesDetails?>? ridesDetails;

  RecurringRidesModelData({
    this.Id,
    this.origin,
    this.destination,
    this.recurringTrip,
    this.date,
    this.time,
    this.preferences,
    this.description,
    this.ridesDetails,
  });
  RecurringRidesModelData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    origin = (json['origin'] != null)
        ? RecurringRidesModelDataOrigin.fromJson(json['origin'])
        : null;
    destination = (json['destination'] != null)
        ? RecurringRidesModelDataDestination.fromJson(json['destination'])
        : null;
    recurringTrip = (json['recurringTrip'] != null)
        ? RecurringRidesModelDataRecurringTrip.fromJson(json['recurringTrip'])
        : null;
    date = json['date']?.toString();
    time = json['time']?.toString();
    preferences = (json['preferences'] != null)
        ? RecurringRidesModelDataPreferences.fromJson(json['preferences'])
        : null;
    description = json['description']?.toString();
    if (json['ridesDetails'] != null) {
      final v = json['ridesDetails'];
      final arr0 = <RecurringRidesModelDataRidesDetails>[];
      v.forEach((v) {
        arr0.add(RecurringRidesModelDataRidesDetails.fromJson(v));
      });
      ridesDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    if (origin != null) {
      data['origin'] = origin!.toJson();
    }
    if (destination != null) {
      data['destination'] = destination!.toJson();
    }
    if (recurringTrip != null) {
      data['recurringTrip'] = recurringTrip!.toJson();
    }
    data['date'] = date;
    data['time'] = time;
    if (preferences != null) {
      data['preferences'] = preferences!.toJson();
    }
    data['description'] = description;
    if (ridesDetails != null) {
      final v = ridesDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['ridesDetails'] = arr0;
    }
    return data;
  }
}

class RecurringRidesModel {
/*
{
  "status": true,
  "data": [
    {
      "_id": "661e1936d6fbf5d15c417388",
      "origin": {
        "name": "3XFX+Q4V, Navi Mumbai",
        "type": "Point",
        "coordinates": [
          72.99778409999999
        ],
        "originDestinationFair": "12.34"
      },
      "destination": {
        "name": "3R7R+C5H, Mumbai",
        "type": "Point",
        "coordinates": [
          72.84047029999999
        ]
      },
      "recurringTrip": {
        "isRecurringTripEnabled": false
      },
      "date": null,
      "time": "",
      "preferences": {
        "luggageType": "S",
        "other": {
          "AppreciatesConversation": true,
          "EnjoysMusic": true,
          "SmokeFree": true,
          "PetFriendly": true,
          "WinterTires": false,
          "CoolingOrHeating": false,
          "BabySeat": false,
          "HeatedSeats": false
        }
      },
      "description": "",
      "ridesDetails": [
        {
          "date": "2024-04-22T00:00:00.000Z",
          "dayOfWeek": 2,
          "day": "Monday",
          "ridersDetails": [
            {
              "_id": "65e03c7246e8a8aa4d62db6c",
              "fullName": "UserOne",
              "phone": "+11234512345",
              "email": "user@test.com",
              "city": "Mumbai",
              "dob": "2006-03-05",
              "gender": "Male",
              "isDriver": true,
              "referralCode": "Z8375Z0413",
              "profileStatus": true,
              "vehicleStatus": true,
              "status": "active",
              "wallet": 0,
              "firebaseUid": "n9XvgstaJCShxg2V5AmREneUYOE2",
              "firebaseSignInProvider": "phone",
              "createdAt": "2024-02-29T08:12:34.805Z",
              "updatedAt": "2024-04-09T07:48:46.026Z",
              "idPic": {
                "key": "idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/idPic/9808bc03-6648-4835-835b-d8b771b7ea24-1000000034.jpg"
              },
              "profilePic": {
                "key": "usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg",
                "url": "https://green-pool-bucket.s3.ca-central-1.amazonaws.com/usersProfile/4af9abdc-f508-415f-88e1-8968bdd90ca8-1000000036.jpg"
              },
              "pinkMode": false,
              "notificationPreferences": {
                "trip": true,
                "alerts": true,
                "payments": true,
                "transactions": false,
                "offers": false
              }
            }
          ]
        }
      ]
    }
  ],
  "message": "success"
} 
*/

  bool? status;
  List<RecurringRidesModelData?>? data;
  String? message;

  RecurringRidesModel({
    this.status,
    this.data,
    this.message,
  });
  RecurringRidesModel.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <RecurringRidesModelData>[];
      v.forEach((v) {
        arr0.add(RecurringRidesModelData.fromJson(v));
      });
      this.data = arr0;
    }
    message = json['message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['message'] = message;
    return data;
  }
}
